{"version":3,"file":"static/js/288.12ecacca.chunk.js","mappings":"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","sources":["views/pages/errors/Error404.js","services/coupon.js","services/userList.js","views/components/Pagination.js","utils/Antd.js","views/pages/Coupon.js","services/application.js","utils/TinyMce.js","views/pages/Application.js","services/category.js","views/pages/Category.js","services/banner.js","services/file.js","utils/UploadImage.js","views/pages/Banner.js","services/variant.js","views/pages/Product/Varient.js","services/userMange.js","services/address.js","views/pages/Management/Address.js","views/pages/Management/userManagement.js","services/product.js","views/pages/Product/Product.js","services/offer.js","views/pages/Offer.js","views/layout/Layout.js"],"sourcesContent":["import { Result, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Error404() {\r\n    return (\r\n        <Result\r\n            status=\"404\"\r\n            title=\"404\"\r\n            subTitle=\"Sorry, the page you visited does not exist.\"\r\n            extra={<Link to=\"/\"><Button type=\"primary\">Back Home</Button></Link>}\r\n        />\r\n    );\r\n}\r\n\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = '';\r\n\r\n\r\n\r\n\r\n    static list(data) {\r\n        return axios.get(\"coupon/list\", { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(\"coupon/save\", data, { params: query });\r\n    }\r\n\r\n    static delete(id) {\r\n        return axios.post('coupon/delete', { ids: id });\r\n    }\r\n\r\n    static details(id) {\r\n        return axios.get('coupon/details/' + id);\r\n    }\r\n\r\n\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'user';\r\n\r\n\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + '/list-user', { params: data });\r\n    }\r\n    static saveUser(data) {\r\n        return axios.post(this.baseURL + \"/save-user\", data);\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + '/delete-user', { ids: id });\r\n    }\r\n\r\n\r\n\r\n}","import { Pagination, Tag } from 'antd';\r\nexport default function MyPagination(props) {\r\n    const { qData, setQData } = props;\r\n\r\n    const handleChange = (page, pp) => {\r\n       // console.log(page,pp)\r\n        if (qData.limit !== pp) {\r\n            setQData({ ...qData, page: 1, limit: pp });\r\n        } else {\r\n            setQData({ ...qData, page: page });\r\n        }\r\n    }\r\n\r\n    const showTotal = () => {\r\n        let start = (qData.page - 1) * qData.limit * 1 + 1;\r\n        let end = qData.page * qData.limit;\r\n        return <Tag>{'Showing ' + start + ' - ' + end + ' out of ' + qData.total}</Tag>\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                qData.total > 0\r\n                    ? <Pagination\r\n                        total={qData.total}\r\n                        showTotal={showTotal}\r\n                        pageSize={qData.limit}\r\n                        current={qData.page}\r\n                        onChange={handleChange}\r\n                        showSizeChanger={true}\r\n                    />\r\n                    : null\r\n            }\r\n        </>\r\n    );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState, forwardRef } from 'react';\r\nimport moment from 'moment';\r\nimport {\r\n    DatePicker,\r\n    Checkbox,\r\n    message,\r\n    Upload,\r\n    Modal,\r\n} from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nexport function AntdDatepicker(props) {\r\n    let {\r\n        format,\r\n        getFormat = 'YYYY-MM-DD',\r\n        inputReadOnly,\r\n        value,\r\n        defaultValue,\r\n        onChange,\r\n        disablePastDate = false,\r\n        disableUpcomingDate = false,\r\n        ...rest\r\n    } = props;\r\n\r\n\r\n    let otherProps = {};\r\n    if (typeof value !== \"undefined\") {\r\n        // otherProps.value = moment(value).format(format || 'DD MMM YYYY') ? moment(new Date(value)) : null\r\n        otherProps.value = moment(new Date(value ? value : new Date()), format || 'DD MMM YYYY');\r\n    }\r\n    if (typeof defaultValue !== \"undefined\") {\r\n        otherProps.defaultValue = defaultValue ? moment(new Date(defaultValue)) : null\r\n    }\r\n    if (typeof onChange !== \"undefined\") {\r\n        otherProps.onChange = (dt) => {\r\n            onChange(dt ? moment(dt).format(getFormat) : null);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        onChange(moment(value).format(getFormat))\r\n    }, [])\r\n\r\n    return (\r\n        <DatePicker\r\n            format={format || 'DD MMM YYYY'}\r\n            inputReadOnly={inputReadOnly || true}\r\n            disabledDate={(current) => {\r\n                let customDate = moment().format(\"YYYY-MM-DD\");\r\n                if (disablePastDate) {\r\n                    return current && current < moment(customDate, \"YYYY-MM-DD\");\r\n                }\r\n                if (disableUpcomingDate) {\r\n                    return current && current > moment(customDate, \"YYYY-MM-DD\");\r\n                }\r\n            }}\r\n            {...otherProps}\r\n            {...rest}\r\n            style={{ width: '100%' }}\r\n        />\r\n    )\r\n}\r\n\r\nexport function MultiChechBox(props) {\r\n    const { col = 3 } = props;\r\n    const type = typeof props.value === 'object' ? 'array' : 'string';\r\n\r\n    let [values, setValues] = useState();\r\n    let [options, setOptions] = useState([]);\r\n\r\n    const handleChange = (e) => {\r\n        const val = typeof e.target.value * 1 !== 'NaN' ? e.target.value + '' : e.target.value * 1;\r\n        if (e.target.checked) {\r\n            values.push(val)\r\n            setValues([...values]);\r\n        } else {\r\n            if (values.indexOf(val) > -1) {\r\n                values.splice(values.indexOf(val), 1);\r\n                setValues([...values])\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (type === 'string') {\r\n            values = props.value ? props.value.split(',').map((v) => v * 1) : [];\r\n            setValues([...values]);\r\n        } else {\r\n            setValues([...props.value]);\r\n        }\r\n    }, [props.value]);\r\n\r\n    useEffect(() => {\r\n        let opts = props.options.map((v, i) => {\r\n            if (v.value) {\r\n                return { value: v.value * 1, label: v.label }\r\n            } else if (v.id) {\r\n                return { value: v.id * 1, label: v.name || v.title || v.label }\r\n            } else if (v._id) {\r\n                return { value: v._id + '', label: v.name || v.title || v.label }\r\n            }\r\n            return null;\r\n        });\r\n        setOptions(opts);\r\n    }, [props.options]);\r\n\r\n    useEffect(() => {\r\n        // if (type === 'string') {\r\n        //     props.onChange(values?.join());\r\n        // } else {\r\n        props.onChange(values)\r\n        // }\r\n    }, [(values || []).join(\",\")])\r\n\r\n    return (\r\n        <div className=\"row mingap\" >\r\n            {\r\n                options.map((v, i) => (\r\n                    <div className={`col-md-${col} mb-2 form-group`} key={i}>\r\n                        <div className=\"border p-1\">\r\n                            <Checkbox\r\n                                value={typeof v.value * 1 !== 'NaN' ? v.value + '' : v.value * 1}\r\n                                checked={values?.includes(typeof v.value * 1 !== 'NaN' ? v.value + '' : v.value * 1)}\r\n                                onChange={handleChange}\r\n                                className=\"mx-0 mr15\"\r\n                            >\r\n                                {v.label}\r\n                            </Checkbox>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport function AntdMsg($msg, $type = 'success') {\r\n    if ($msg) {\r\n        if ($type === 'success')\r\n            message.success($msg);\r\n        if ($type === 'error')\r\n            message.error($msg);\r\n        if ($type === 'warning')\r\n            message.warning($msg);\r\n    }\r\n};\r\n\r\nfunction getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n}\r\n\r\nconst UploadImage = forwardRef((props, ref) => {\r\n    const { fileCount } = props;\r\n    const fileRef = ref;\r\n    let { files } = props;\r\n    useEffect(() => {\r\n        setFileList(files)\r\n    }, [files])\r\n\r\n    if (files.length) {\r\n        files = files?.map((v, i) => {\r\n            return { uid: i, url: v.url, status: 'done', name: v.name };\r\n        });\r\n    } else {\r\n        files = [];\r\n    }\r\n\r\n\r\n    const [fileList, setFileList] = useState(files);\r\n\r\n    const dummyRequest = ({ file, onSuccess }) => {\r\n        setTimeout(() => {\r\n            onSuccess(\"ok\");\r\n            if (!fileRef.current.uploadingFiles) {\r\n                fileRef.current.uploadingFiles = [];\r\n            }\r\n            fileRef.current.uploadingFiles?.push(file);\r\n        }, 0);\r\n    };\r\n    const [previewVisible, setPreviewVisible] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState('');\r\n    const [previewTitle, setPreviewTitle] = useState('');\r\n\r\n    const handleCancel = () => setPreviewVisible(false);\r\n\r\n    const handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n        setPreviewVisible(true);\r\n        setPreviewImage(file.url || file.preview);\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\r\n    };\r\n\r\n    const handleChange = ({ fileList: newFileList }) => {\r\n        setFileList(newFileList);\r\n    };\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            <PlusOutlined />\r\n            <div style={{ marginTop: 8 }}>Upload</div>\r\n        </div>\r\n    );\r\n    return (\r\n        <>\r\n            <Upload\r\n                // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                listType=\"picture-card\"\r\n                customRequest={dummyRequest}\r\n                fileList={fileList}\r\n                onPreview={handlePreview}\r\n                onChange={(value) => {\r\n                    if (value.file.status === 'removed' || value.file.status) {\r\n                        handleChange(value)\r\n                    }\r\n                }}\r\n                beforeUpload={\r\n                    (file) => {\r\n                        if (!file.type.includes('image/')) {\r\n                            message.error('Invalid file type');\r\n                            return false\r\n                        }\r\n                    }\r\n                }\r\n                onRemove={(e) => {\r\n                    if (!fileRef.current.deletingFiles) {\r\n                        fileRef.current.deletingFiles = [];\r\n                    }\r\n                    if (!e.thumbUrl) {\r\n                        fileRef.current.deletingFiles?.push(e);\r\n                    } else {\r\n                        fileRef.current.uploadingFiles = fileRef.current.uploadingFiles.filter((v) => { return v.uid !== e.uid })\r\n                    }\r\n                }}\r\n            >\r\n                {fileList.length >= fileCount ? null : uploadButton}\r\n            </Upload>\r\n            <Modal\r\n                open={previewVisible}\r\n                title={previewTitle}\r\n                footer={null}\r\n                onCancel={handleCancel}\r\n            >\r\n                <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n            </Modal>\r\n        </>\r\n    );\r\n})\r\n\r\nexport default UploadImage;","import { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag, DatePicker } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\n\r\nimport service from '../../services/coupon';\r\nimport UserService from '../../services/userList';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport dayjs from 'dayjs';\r\nimport moment from 'moment';\r\n\r\nexport default function Coupon() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, });\r\n    const [user, setUser] = useState([]);\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 30,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Title',\r\n            width: 150,\r\n            dataIndex: 'title',\r\n\r\n        },\r\n\r\n        {\r\n            title: 'Code',\r\n            width: 100,\r\n            dataIndex: 'code',\r\n\r\n        },\r\n        {\r\n            title: 'EndDate',\r\n            width: 100,\r\n            dataIndex: 'expiryDate',\r\n\r\n        },\r\n        {\r\n            title: 'Discount Value',\r\n            width: 100,\r\n            dataIndex: 'discountValue',\r\n\r\n        },\r\n        {\r\n            title: 'Coupon Use',\r\n            width: 100,\r\n            dataIndex: 'typeOfUse',\r\n\r\n        },\r\n\r\n\r\n\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 60,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this User?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ key: v._id, ...v })).reverse());\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    function listUser() {\r\n        UserService.listUser()\r\n            .then(res => { setUser(res.data || []); }).catch(err => { AntdMsg('User data not loaded', 'error'); });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n    console.log(tableColumns)\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n        listUser()\r\n    }, [qData.page, qData.limit]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Coupon</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list,user }} />\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n    const [data, setData] = useState([])\r\n\r\n\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined) {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        service.list().then((res) => {\r\n            setData(res.data?.map((e) => ({ label: e.title, value: e._id })))\r\n        })\r\n        // setData(res.data.map((e) => ({ label: e.title, value: e._id })))\r\n\r\n\r\n    }, [])\r\n\r\n    console.log(data)\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                {/* <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col> */}\r\n\r\n                <Col xs={24} xl={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Select\r\n                            showSearch\r\n                            allowClear\r\n                            placeholder=\"Select an Account\"\r\n                            onChange={e => (setQData({ ...qData, _id: e, title: data[0].label }))}\r\n                            //     optionFilterProp=\"children\"\r\n                            // filterOption={(input, option) =>\r\n                            //     (option?.label ?? '').toLowerCase().includes(input.toLowerCase())\r\n                            // }\r\n                            // value={data.value}\r\n                            options={data}\r\n                        />\r\n\r\n\r\n\r\n\r\n                    </Form.Item>\r\n\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list,user } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.details(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.avatar ? [res.data?.avatar] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    // useEffect(() => {\r\n    //     console.log('data', data);\r\n    // }, [data]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Coupon'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Title\" required>\r\n                                    <Input placeholder=\"Title\" value={data.title} onChange={e => { handleChange({ title: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Max DiscountValue\" required>\r\n                                    <Input placeholder=\"Max DiscountValue\" value={data.maxDiscountValue} onChange={e => { handleChange({ maxDiscountValue: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Minimun Order Value\" required>\r\n                                    <Input placeholder=\" Minimun Order Amount\" value={data.minimunOrderPrice} onChange={e => { handleChange({ minimunOrderPrice: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Discount Type\" required>\r\n                                    <Select value={data.discountType} onChange={e => { handleChange({ discountType: e }) }} >\r\n                                        <Select.Option value={'percent'}>Percent</Select.Option>\r\n                                        <Select.Option value={'flat'}>Flat</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                            <Form.Item label=\"Code\" required>\r\n                                    <Input placeholder=\"Code\" value={data.code} onChange={e => { handleChange({ code: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Expiry Date\" required>\r\n                                    <DatePicker format='DD MMM YYYY' onChange={(e) => { handleChange({ expiryDate: e }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Discount Value\" required>\r\n                                    <Input placeholder=\"discountValue\" value={data.discountValue} onChange={e => { handleChange({ discountValue: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                             <Col span={24}>\r\n                                <Form.Item label=\"User\" >\r\n                                    <Select mode='multiple' value={data.userIds} onChange={v => { handleChange({ userIds: v }) }}\r\n                                        options={\r\n                                            user.map(v => (\r\n                                                {\r\n                                                    value: v._id,\r\n                                                    label: v.name,\r\n                                                }\r\n                                            ))\r\n                                        } >\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Coupon Type\" required>\r\n                                    <Select value={data.typeOfUse} onChange={e => { handleChange({ typeOfUse: e }) }} >\r\n                                        <Select.Option value=\"Single\">Single Use</Select.Option>\r\n                                        <Select.Option value=\"Multiple\">Multiple Use</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'application';\r\n\r\n    static detail(data) {\r\n        return axios.get(this.baseURL + '/details/' + data.type, { params: data });\r\n    }\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n}","import React, { useRef } from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\n\r\n\r\nexport default function TinyMce(props) {\r\n    let { height = 400, menubar = false, plugins, toolbar, content_style, initialValue, onChange } = props;\r\n    if (!plugins) {\r\n        plugins = [\r\n            'advlist autolink lists link image charmap print preview anchor',\r\n            'searchreplace visualblocks code fullscreen',\r\n            'insertdatetime media table paste code help wordcount forecolor backcolor textcolor',\r\n            'image paste table code'\r\n        ];\r\n    }\r\n    if (!toolbar) {\r\n        toolbar = 'undo redo | formatselect | bold italic backcolor | forecolor emoticons'\r\n            + '| table tabledelete | tableprops tablerowprops tablecellprops'\r\n            + '| alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | help | image link | imageupload | code | fullscreen';\r\n        // toolbar = 'undo redo | insert | styleselect | bold italic | fontselect fontsizeselect | alignleft aligncenter alignright alignjustify | forecolor backcolor emoticons | bullist numlist outdent indent | link unlink | image responsivefilemanager table | removeformat code help | fullscreen'\r\n    }\r\n    if (!content_style) {\r\n        content_style = 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }';\r\n    }\r\n\r\n    const editorRef = useRef(null);\r\n    const editorContent = () => {\r\n        if (editorRef.current) {\r\n            onChange(editorRef.current.getContent())\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Editor\r\n                onInit={(evt, editor) => editorRef.current = editor}\r\n                {...{ initialValue }}\r\n                init={{\r\n                    height, menubar, plugins, toolbar, content_style,\r\n\r\n                    file_browser_callback_types: 'image',\r\n                    file_picker_callback: function (cb, value, meta) {\r\n                        const input = document.createElement(\"input\");\r\n                        input.setAttribute(\"type\", \"file\");\r\n                        input.setAttribute(\"accept\", \"image/*\");\r\n                        input.onchange = function () {\r\n                            const file = this.files[0];\r\n                            const reader = new FileReader();\r\n                            reader.readAsDataURL(file);\r\n                            reader.onload = () => { cb(reader.result, { title: file.name }); };\r\n                        };\r\n                        input.click();\r\n                    },\r\n                    deprecation_warnings: false\r\n                }}\r\n                onSelectionChange={editorContent}\r\n            />\r\n        </>\r\n    );\r\n}\r\n","import { Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle } from 'react';\r\nimport service from '../../services/application';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport TinyMce from \"../../utils/TinyMce\"\r\n\r\nexport default function Application() {\r\n\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [currentTab, setCurrentTab] = useState(0);\r\n\r\n    const handleChange = (value, changeForm) => {\r\n        if (changeForm) {\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n        }\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        try {\r\n            (() => {\r\n                return currentTab === 0 ? service.save({ ...data, type: 'aboutus', data: data.data }) :\r\n                    currentTab === 1 ? service.save({ ...data, type: 'termcondition', data: data.data }) :\r\n                        currentTab === 2 ? service.save({ ...data, type: 'faq', data: data.data }) :\r\n                            currentTab === 3 ? service.save({ ...data, type: 'contactus', data: data.data }) :\r\n                                currentTab === 4 ? service.save({ ...data, type: 'privacy-policy', data: data.data }) : null\r\n\r\n            })().then(res => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                setCurrentTab((currentTab + 1) % 5);\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        } catch (err) {\r\n            AntdMsg(err.message, 'error');\r\n        }\r\n    }\r\n\r\n    const getDetails = (data) => {\r\n        setAjxRequesting(true);\r\n\r\n        service.detail(data).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (currentTab === 0) {\r\n            getDetails({ _id: data._id, type: \"aboutus\" });\r\n        } else if (currentTab === 1) {\r\n            getDetails({ _id: data._id, type: \"termcondition\" });\r\n        } else if (currentTab === 2) {\r\n            getDetails({ _id: data._id, type: \"faq\" });\r\n        } else if (currentTab === 3) {\r\n            getDetails({ _id: data._id, type: \"contactus\" });\r\n        } else if (currentTab === 4) {\r\n            getDetails({ _id: data._id, type: \"privacy-policy\" });\r\n        }\r\n    }, [currentTab])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                <Tabs activeKey={currentTab} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setCurrentTab(v); }}\r\n                    items={[\r\n                        {\r\n                            label: \"About us\",\r\n                            key: 0,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <Aboutus {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        },\r\n                        {\r\n                            label: \"Terms & Condition\",\r\n                            key: 1,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <TandC {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        },\r\n                        {\r\n                            label: \"FAQ\",\r\n                            key: 2,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <FAQ {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        },\r\n                        {\r\n                            label: \"Contact us\",\r\n                            key: 3,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <Contactus {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        },\r\n                        {\r\n                            label: \"Privacy Policy\",\r\n                            key: 4,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <PrivacyPolicy {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        }\r\n                    ]}\r\n                />\r\n                <div style={{ display: \"flex\", flexDirection: \"row-reverse\", paddingTop: \"5px\", paddingRight: \"70px\" }}>\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>{currentTab === 4 ? \"Save\" : \"Next\"}</Button>\r\n                </div>\r\n            </Spin>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, data }) {\r\n\r\n    const [modelNames, setModelNames] = useState([])\r\n\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined) {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const models = data?.map((item) => (\r\n            {\r\n                label: item.modelName,\r\n                value: item.modelId,\r\n            }\r\n\r\n        ))\r\n        setModelNames(models)\r\n\r\n    }, [data])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected dealer?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [currentTab, setCurrentTab] = useState(0);\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { status: true }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detail(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n\r\n        try {\r\n            (() => {\r\n                return currentTab === 0 ? service.save({ type: 'aboutus', data: data.data }) :\r\n                    currentTab === 1 ? service.save({ type: 'termcondition', data: data.data }) :\r\n                        currentTab === 2 ? service.save({ type: 'faq', data: data.data }) :\r\n                            currentTab === 3 ? service.save({ type: 'contactus', data: data.data }) :\r\n                                currentTab === 4 ? service.save({ type: 'privacy-policy', data: data.data }) : null\r\n\r\n            })().then(res => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                setCurrentTab((currentTab + 1) % 5);\r\n                list();\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        } catch (err) {\r\n            AntdMsg(err.message, 'error');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [currentTab, data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setCurrentTab(0);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        console.log(data)\r\n        if (data.type === \"aboutus\") {\r\n            setCurrentTab(0)\r\n        } else if (data.type === \"termcondition\") {\r\n            setCurrentTab(1)\r\n        } else if (data.type === \"faq\") {\r\n            setCurrentTab(2)\r\n        } else if (currentTab === 3) {\r\n            data.type = \"contactus\"\r\n        } else if (currentTab === 4) {\r\n            data.type = \"privacy-policy\"\r\n        }\r\n    }, [currentTab])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Data'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>{currentTab === 4 ? \"Save\" : \"Next\"}</Button>\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Tabs activeKey={currentTab} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setCurrentTab(v); }}\r\n                        items={[\r\n                            {\r\n                                label: \"About us\",\r\n                                key: 0,\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <Aboutus {...{ data, handleChange, save }} />\r\n                                </Card>,\r\n                                disabled: data.type === \"aboutus\"\r\n                            },\r\n                            {\r\n                                label: \"Terms & Condition\",\r\n                                key: 1,\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <TandC {...{ data, handleChange, save }} />\r\n                                </Card>,\r\n                            },\r\n                            {\r\n                                label: \"FAQ\",\r\n                                key: 2,\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <FAQ {...{ data, handleChange, save }} />\r\n                                </Card>,\r\n                            },\r\n                            {\r\n                                label: \"Contact us\",\r\n                                key: 3,\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <Contactus {...{ data, handleChange, save }} />\r\n                                </Card>,\r\n                            },\r\n                            {\r\n                                label: \"Privacy Policy\",\r\n                                key: 4,\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <PrivacyPolicy {...{ data, handleChange, save }} />\r\n                                </Card>,\r\n                            }\r\n                        ]}\r\n                    />\r\n                </Spin>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst Aboutus = ({ data, handleChange }) => {\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Data\" required>\r\n                            <TinyMce initialValue={data.data} onChange={(v) => { data.data = v }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TandC = ({ data, handleChange }) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Data\" required>\r\n                            <TinyMce initialValue={data.data} onChange={(v) => { data.data = v }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst FAQ = ({ data, handleChange }) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Data\" required>\r\n                            <TinyMce initialValue={data.data} onChange={(v) => { data.data = v }} />\r\n\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst Contactus = ({ data, handleChange }) => {\r\n\r\n    const [editableStr, setEditableStr] = useState('This is an editable text.');\r\n    const [a, setA] = useState([1])\r\n    const [b, setB] = useState([1])\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]} style={{ width: \"100%\", padding: \"0 5px\" }}>\r\n                    <Col span={6}>\r\n\r\n                        {a.map(() => {\r\n                            return <Form.Item label=\"Email\" required>\r\n\r\n                                <Typography.Paragraph\r\n\r\n                                    style={{ marginTop: \"8px\" }}\r\n                                    editable={{\r\n                                        onChange: setEditableStr,\r\n                                    }}\r\n                                >\r\n                                    {editableStr}\r\n                                </Typography.Paragraph>\r\n\r\n                            </Form.Item>\r\n\r\n                        })}\r\n                        <Button onClick={() => setA((pre) => {\r\n                            return [...pre, 1]\r\n                        })}>Add</Button>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        {b.map(() => {\r\n                            return <Form.Item label=\"Phone Number\" required>\r\n\r\n                                <Typography.Paragraph\r\n                                    style={{ marginTop: \"8px\" }}\r\n                                    editable={{\r\n                                        onChange: setEditableStr,\r\n                                    }}\r\n                                >\r\n                                    {editableStr}\r\n                                </Typography.Paragraph>\r\n\r\n                            </Form.Item>\r\n                        })}\r\n                        <Button onClick={() => setB((pre) => {\r\n                            return [...pre, 1]\r\n                        })}>Add</Button>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Address\" required>\r\n                            <Input placeholder=\"Street No: 9, Delhi: 110054\" value={data.data?.address} onChange={e => { handleChange({ data: { ...data.data, address: e.target.value } }) }} />\r\n                        </Form.Item>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\nconst PrivacyPolicy = ({ data, handleChange }) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Data\" required>\r\n                            <TinyMce initialValue={data.data} onChange={(v) => { data.data = v }} />\r\n\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = '/ecommerce/';\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + \"category/list\", { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"category/save\", data, { params: query });\r\n    }\r\n\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + 'category/delete', { ids: id });\r\n    }\r\n\r\n    static details(id) {\r\n        return axios.get(this.baseURL + 'category/details/' + id);\r\n    }\r\n\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../components/Pagination';\r\nimport service from '../../services/category';\r\nimport util from '../../utils/util';\r\nimport { AntdMsg } from '../../utils/Antd';\r\n\r\n\r\nexport default function Category({ parentId }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, parentId });\r\n    const addNewModalRef = useRef();\r\n    const addSubNewModalRef = useRef();\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 25,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            width: 200,\r\n        },\r\n        {\r\n            title: 'Lable',\r\n            dataIndex: 'lable',\r\n            width: 100,\r\n            render: (v, row) => {\r\n                return <Button onClick={() => { addSubNewModalRef.current.openForm(row) }} > Detail</Button>\r\n            }\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !parentId\r\n                    ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Product</Typography.Title>\r\n                    : null\r\n            }\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, parentId }} />\r\n            <NewForm ref={addSubNewModalRef} ></NewForm>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col\r\n                    xs={{ span: 24 }}\r\n                    sm={{ span: 16 }}\r\n                    md={{ span: 10 }}\r\n                    lg={{ span: 4 }}\r\n\r\n                >\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, parentId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            console.log('dt', dt);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { parentId, isTop: false }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.details(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || '') });\r\n        }\r\n    }, [data.name]);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Product'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>save</Button>,\r\n                ]}\r\n            >\r\n\r\n\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"is Top\" required>\r\n                                    <Select value={data.isTop} onChange={e => { handleChange({ isTop: e }) }} >\r\n                                        <Select.Option value={true}>Yes</Select.Option>\r\n                                        <Select.Option value={false}>No</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst NewForm = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={<>Data of &nbsp;<span style={{ color: 'red' }}>{data.name}</span></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n                footer={null}\r\n            >\r\n                <Category parentId={data._id}></Category>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'banner';\r\n\r\n    // for Banners : \r\n    static bannerDetails(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static bannerList(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static bannerSave(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static bannerDelete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'file';\r\n\r\n    static get(url) {\r\n        return axios.get(\"../\" + url);\r\n    }\r\n\r\n    static save(data, config) {\r\n        return axios.post(this.baseURL + \"/save\", data, config);\r\n    }\r\n    static remove(data) {\r\n        return axios.post(this.baseURL + \"/remove\", data);\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Upload } from \"antd\";\r\nimport ImgCrop from 'antd-img-crop';\r\nimport fileService from \"../services/file\";\r\nimport React from \"react\";\r\n\r\nconst UploadImage = ({ fileList, setFileList, count = 1, cropImage = null, disabled = false, listType = \"picture-card\" }) => {\r\n    const uploadImage = async options => {\r\n        const { onSuccess, onError, file, onProgress } = options;\r\n\r\n        const fmData = new FormData();\r\n        const config = { onUploadProgress: event => { onProgress({ percent: (event.loaded / event.total) * 100 }); } };\r\n        fmData.append(\"file\", file);\r\n        try {\r\n            fileService.save(fmData, config).then(res => {\r\n                onSuccess(\"Ok\");\r\n                setFileList([...fileList, { uid: res.data.uid, url: res.data.url, name: res.data.name }]);\r\n            })\r\n        } catch (err) {\r\n            onError({ err });\r\n        }\r\n    };\r\n\r\n    const handleOnChange = ({ file, fl }) => {\r\n        if (typeof fl !== typeof []) {\r\n            fl = [];\r\n        }\r\n        setFileList(fl);\r\n\r\n    };\r\n    const handleRemove = (file) => {\r\n        fileService.remove({ uid: file.uid }).then(res => {\r\n            // setFileList(fileList?.filter(v => v.uid !== file.uid))\r\n        })\r\n    };\r\n\r\n    if (cropImage) {\r\n        if (typeof cropImage !== typeof {}) {\r\n            cropImage = {};\r\n        }\r\n        cropImage.aspect = cropImage.aspect || 1;\r\n        cropImage.shape = cropImage.shape || 'rect';\r\n        cropImage.quality = cropImage.quality || 1;\r\n        return (\r\n            <ImgCrop rotate aspect shape={cropImage.shape} quality={cropImage.quality} >\r\n                <Upload\r\n                    accept=\"image/*\"\r\n                    customRequest={uploadImage}\r\n                    onChange={handleOnChange}\r\n                    onRemove={handleRemove}\r\n                    listType={listType}\r\n                    fileList={fileList}\r\n                    className=\"image-upload-grid\"\r\n                    disabled={disabled}\r\n                >\r\n                    {fileList?.length >= count ? null : <div>Upload</div>}\r\n                </Upload>\r\n            </ImgCrop>\r\n        );\r\n    } else {\r\n        return <Upload\r\n            accept=\"image/*\"\r\n            customRequest={uploadImage}\r\n            onChange={handleOnChange}\r\n            onRemove={handleRemove}\r\n            listType={listType}\r\n            fileList={fileList}\r\n            className=\"image-upload-grid\"\r\n            disabled={disabled}\r\n        >\r\n            {fileList?.length >= count ? null : <div>Upload</div>}\r\n        </Upload>\r\n    }\r\n\r\n};\r\n\r\n\r\nexport default UploadImage","import { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Image, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport moment from \"moment\";\r\nimport service from '../../services/banner';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport UploadImage from '../../utils/UploadImage';\r\n\r\n\r\nexport default function Banner() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo' });\r\n    const addNewModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Image',\r\n            dataIndex: 'imgUrl',\r\n            width: 100,\r\n            render: (v) => {\r\n                return <Image src={v?.url} height={80} />\r\n            }\r\n        },\r\n        {\r\n            title: 'Uploaded At',\r\n            dataIndex: 'createdAt',\r\n            width: 100,\r\n            render: (v) => {\r\n                return moment(v).format(\"dddd, MMMM Do YYYY, h:mm:ss a\");\r\n            }\r\n        },\r\n        {\r\n            title: 'Type',\r\n            dataIndex: 'type',\r\n            width: 80,\r\n            render: (_, row) => {\r\n                return (<span>{row.type}</span>)\r\n            }\r\n\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this image?. Be sure to delete the image from server.\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.bannerList(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.bannerDelete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Banners</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        {/* <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear /> */}\r\n                    </Form.Item>\r\n                </Col>\r\n                {/* <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col> */}\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.bannerDetails(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.imgUrl ? [res.data?.imgUrl] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.bannerSave(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ imgUrl: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Banner'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                //className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Photo\">\r\n                                    <UploadImage {...{ fileList, setFileList }} count={1} listType=\"picture\" />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Priority\">\r\n                                    <Input placeholder='Priority' value={data.priority} onChange={e => { handleChange({ priority: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Type\" required>\r\n                                    <Select value={data.type} onChange={v => { handleChange({ type: v }) }} >\r\n                                        <Select.Option value=\"home\">Home</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'ecommerce/variant/';\r\n\r\n    static detailUser(id, data) {\r\n        return axios.get(this.baseURL + 'details/' + id, { params: data });\r\n    }\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + 'list', { params: data });\r\n    }\r\n    static saveUser(data, query) {\r\n        return axios.post(this.baseURL + \"save\", data, { params: query });\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + 'delete', { ids: id });\r\n    }\r\n}","\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Input } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport util from '../../../utils/util';\r\nimport service from '../../../services/variant';\r\n\r\nexport default function Varient({ productId }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n\r\n    // const [qData, setQData] = useState({ page: 1, limit: 20, productId });\r\n\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, productId, });\r\n    const addNewModalRef = useRef();\r\n    const addNewLabelRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Category',\r\n            dataIndex: 'cateId',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Color',\r\n            dataIndex: 'color',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Inventory',\r\n            dataIndex: 'inventory',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Strile',\r\n            dataIndex: 'strile',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Total',\r\n            dataIndex: 'total',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Unit',\r\n            dataIndex: 'unite',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Volume',\r\n            dataIndex: 'volume',\r\n        },\r\n        {\r\n            title: 'Price',\r\n            dataIndex: 'price',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Kilo-Gram',\r\n            dataIndex: 'kg',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n    function list() {\r\n        setLoading(true);\r\n        service.listUser(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n    const deleteData = (id) => {\r\n        service.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n    return (\r\n        <>\r\n            {!productId ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Varient</Typography.Title> : null}\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, productId }} />\r\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data ?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, productId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { productId }\r\n            );\r\n        }\r\n    }));\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailUser(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveUser(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || \"\") });\r\n        }\r\n    }, [data.name]);\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Varient'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n\r\n                                <Form.Item label=\"Category\" required>\r\n                                    <Input placeholder=\"Category\" value={data.cateId} onChange={e => { handleChange({ cateId: e.target.value }) }} />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Price\" required>\r\n                                    <Input placeholder=\"price\" value={data.price} onChange={e => { handleChange({ price: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n\r\n                                <Form.Item label=\"Color\" required>\r\n                                    <Input placeholder=\"Color\" value={data.color} onChange={e => { handleChange({ color: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n\r\n                                <Form.Item label=\"Kilo-Gram\" required>\r\n                                    <Input placeholder=\"Kilo-Gram\" value={data.kg} onChange={e => { handleChange({ kg: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {/* <Col span={24}>\r\n\r\n                                <Form.Item label=\"Inventory\" required>\r\n                                    <Input placeholder=\"Inventory\" value={data.inventory} onChange={e => { handleChange({ inventory: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Strile\" required>\r\n                                    <Input placeholder=\"Strile\" value={data.strile} onChange={e => { handleChange({ strile: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Total\" required>\r\n                                    <Input placeholder=\"Total\" value={data.total} onChange={e => { handleChange({ total: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Unit\" required>\r\n                                    <Input placeholder=\"Unit\" value={data.unite} onChange={e => { handleChange({ unite: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Volume\" required>\r\n                                    <Input placeholder=\"Volume\" value={data.volume} onChange={e => { handleChange({ volume: e.target.value }) }} />\r\n                                </Form.Item>\r\n\r\n                            </Col>\r\n\r\n                            </Col> */}\r\n\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\nconst AddLabel = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add User' : 'List of Varient')}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n            >\r\n                <Varient productId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'user';\r\n\r\n    static detailUser(id, data) {\r\n        return axios.get(this.baseURL + '/details-user/' + id, { params: data });\r\n    }\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + '/list-user', { params: data });\r\n    }\r\n    static saveUser(data, query) {\r\n        return axios.post(this.baseURL + \"/save-user\", data, { params: query });\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + '/delete-user', { ids: id });\r\n    }\r\n\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'user';\r\n\r\n    static detailJob(id, data) {\r\n        return axios.get(this.baseURL + '/address/details' + id, { params: data });\r\n    }\r\n    static listJob(data) {\r\n        return axios.get(this.baseURL + '/address/list', { params: data });\r\n    }\r\n    static saveJob(data, query) {\r\n        return axios.post(this.baseURL + '/address/save', data, { params: query });\r\n    }\r\n    static deleteJob(id) {\r\n        return axios.post(this.baseURL + '/address/delete', { ids: id });\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport util from '../../../utils/util';\r\nimport service from '../../../services/address';\r\n\r\n\r\n\r\n\r\nexport default function Address({ userId }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, userId });\r\n    const addNewModalRef = useRef();\r\n    const addNewLabelRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'City',\r\n            dataIndex: 'city',\r\n\r\n        },\r\n        {\r\n            title: 'Pin',\r\n            dataIndex: 'pin',\r\n        },\r\n        {\r\n            title: 'State',\r\n            dataIndex: 'state',\r\n        },\r\n        {\r\n            title: 'Street 1',\r\n            dataIndex: 'street1',\r\n        },\r\n        {\r\n            title: 'Street 2',\r\n            dataIndex: 'street2',\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.listJob(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.deleteJob(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !userId\r\n                    ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title>\r\n                    : null\r\n            }\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, userId }} />\r\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected datas?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, userId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            console.log('dt', dt);\r\n            setData(\r\n                dt\r\n                    ? { ...dt }\r\n                    : { userId }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveJob(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || '') });\r\n        }\r\n    }, [data.name]);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"City\" required>\r\n                                    <Input placeholder=\"City\" value={data.city} onChange={e => { handleChange({ city: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Pin\" required>\r\n                                    <Input placeholder=\"Pin\" value={data.pin} onChange={e => { handleChange({ pin: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"State\" required>\r\n                                    <Input placeholder=\"State\" value={data.state} onChange={e => { handleChange({ state: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Street 1\" required>\r\n                                    <Input placeholder=\"Street 1\" value={data.street1} onChange={e => { handleChange({ street1: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Street 2\" required>\r\n                                    <Input placeholder=\"Street 2\" value={data.street2} onChange={e => { handleChange({ street2: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n                {/* <Address userId={data._id}/> */}\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst AddLabel = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add User' : 'List of Varient')}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n            >\r\n                <Address productId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport UserService from '../../../services/userMange';\r\nimport UploadImage from '../../../utils/UploadImage';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport Address from './Address';\r\n\r\n\r\nexport default function UserManagement({ userId }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, userId });\r\n    const addNewModalRef = useRef();\r\n    const ModelModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Username',\r\n            dataIndex: 'name',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Phone',\r\n            dataIndex: 'phone',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            width: 200,\r\n        },\r\n        {\r\n            title: 'Job',\r\n            dataIndex: '_id',\r\n            width: 80,\r\n            render: (v, row) => <Button type=\"primary\" size='small' onClick={() => { ModelModalRef.current.openForm({ _id: row._id, name: row.name }) }} >Address</Button>\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: status => {\r\n                if (status === \"blocked\") {\r\n                    return <Tag color='red'>Blocked</Tag>\r\n                } else if (status === \"active\") {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color=\"yellow\">Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this User?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        UserService.listUser(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        UserService.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n\r\n    return (\r\n        <>\r\n            {!userId ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title> : null}\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, userId }} />\r\n            <ModelModal ref={ModelModalRef} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col xs={24} xl={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col xs={24} xl={4}>\r\n                    <Form.Item>\r\n                        <Select value={qData.status} allowClear placeholder=\"Search By Status\" onChange={e => { setQData({ ...qData, status: e }) }} >\r\n                            <Select.Option value=\"active\">Active</Select.Option>\r\n                            <Select.Option value=\"inactive\">Inactive</Select.Option>\r\n                            <Select.Option value=\"blocked\">Blocked</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, userId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { userId }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        UserService.detailUser(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.avatar ? [res.data?.avatar] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        UserService.saveUser(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ avatar: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={800}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={20}>\r\n                                <Row gutter={[12, 2]}>\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Username\" required>\r\n                                            <Input placeholder=\"John Doe\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Email\" required>\r\n                                            <Input placeholder=\"Email\" value={data.email} onChange={e => { handleChange({ email: e.target.value }) }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Phone\" required>\r\n                                            <Input placeholder=\"Phone\" value={data.phone} onChange={e => { handleChange({ phone: e.target.value }) }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col span={4}>\r\n                                <Form.Item label=\"Avatar\">\r\n                                    <UploadImage {...{ fileList, setFileList }} count={1} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={10}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value=\"active\">Active</Select.Option>\r\n                                        <Select.Option value=\"inactive\">Inactive</Select.Option>\r\n                                        <Select.Option value=\"blocked\">Blocked</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst ModelModal = forwardRef((props, ref) => {\r\n\r\n\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt ? { ...dt } : { status: true });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={<>All Job List of <Typography.Text type=\"danger\">{data?.name}</Typography.Text></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1600}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                ]}\r\n            >\r\n                <Address userId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'ecommerce/product/';\r\n\r\n\r\n    static detailProduct(id, data) {\r\n        return axios.get(this.baseURL + 'details/' + id, { params: data });\r\n    }\r\n    static listProduct(data) {\r\n        return axios.get(this.baseURL + 'list', { params: data });\r\n    }\r\n    static saveProduct(data, query) {\r\n        return axios.post(this.baseURL + \"save\", data, { params: query });\r\n    }\r\n\r\n    static detailUser(id, data) {\r\n        return axios.get(this.baseURL + 'details/' + id, { params: data });\r\n    }\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + 'list', { params: data });\r\n    }\r\n    static saveUser(data, query) {\r\n        return axios.post(this.baseURL + \"save\", data, { params: query });\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + 'delete', { ids: id });\r\n    }\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag, Divider } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport service from '../../../services/product';\r\nimport util from '../../../utils/util';\r\nimport Varient from './Varient';\r\nimport UploadImage from '../../../utils/UploadImage';\r\nimport categoryService from '../../../services/category';\r\n\r\nexport default function Product({ parentId }) {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [category, setCategory] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, parentId });\r\n    const addNewModalRef = useRef();\r\n    const addNewLabelRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Description',\r\n            dataIndex: 'description',\r\n            width: 400,\r\n            render: (v) => <Typography.Text ellipsis={{ expandable: true }}>{v}</Typography.Text>,\r\n        },\r\n        {\r\n            title: 'Meta-Title',\r\n            dataIndex: 'metaTitle',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Meta-Tag',\r\n            dataIndex: 'metaTag',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Meta-Description',\r\n            dataIndex: 'metaDescription',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n    function list() {\r\n        setLoading(true);\r\n        service.listUser(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    function listCategory() {\r\n        categoryService.list()\r\n            .then(res => { setCategory(res.data || []); }).catch(err => { AntdMsg('Product data not loaded', 'error'); });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n    useEffect(() => {\r\n        list();\r\n        listCategory();\r\n    }, [qData.page, qData.limit]);\r\n    return (\r\n        <>\r\n            {!parentId ? <Typography.Title level={5} style={{ marginTop: 0 }}>Product List</Typography.Title> : null}\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, parentId, category }} />\r\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col xs={24} xl={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data ?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, parentId, category } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [thumbFile, setThumbFile] = useState([]);\r\n    const [file, setFile] = useState([]);\r\n\r\n\r\n    const handleChange = (v, k) => {\r\n        let varDt = data;\r\n        let keys = k.split('.');\r\n        for (let i = 0; i < keys.length; i++) {\r\n            if (i + 1 === keys.length) {\r\n                varDt[keys[i]] = v;\r\n            } else {\r\n                if (typeof varDt[keys[i]] === 'undefined') {\r\n                    if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                        varDt[keys[i]] = [];\r\n                    } else {\r\n                        varDt[keys[i]] = {};\r\n                    }\r\n                } varDt = varDt[keys[i]];\r\n            }\r\n        }\r\n        setData({ ...data });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { parentId, isPremium: false, isBestSelling: false, forBirthday: false, forAnniversary: false, isBestSellingCombos: false, variants: [{}] }\r\n            );\r\n        }\r\n    }));\r\n    console.log(data);\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailUser(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFile(res.data.imgs.length ? [...res.data.imgs] : [])\r\n            setThumbFile(res.data.thumbImg ? [res.data.thumbImg] : [])\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveUser(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange(util.removeSpecialChars(data.name || \"\"), 'slug');\r\n        }\r\n    }, [data.name]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange(util.removeSpecialChars(data?.name || ''), 'slug');\r\n        }\r\n    }, [data.name]);\r\n\r\n    useEffect(() => {\r\n        setData({ ...data, thumbImg: thumbFile[0] })\r\n    }, [thumbFile])\r\n\r\n    useEffect(() => {\r\n        setData({ ...data, imgs: file })\r\n    }, [file])\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({})\r\n        }\r\n    }, [open])\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add New' : 'Edit') + ' Product'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1000}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange(e.target.value, \"name\") }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange(util.removeSpecialChars(e.target.value), \"slug\") }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Description\" required>\r\n                                    <Input.TextArea rows={4} placeholder=\"Description\" value={data.description} onChange={e => { handleChange(util.removeSpecialChars(e.target.value), \"description\") }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Meta-Title\" required>\r\n                                    <Input placeholder=\"Meta-Title\" value={data.metaTitle} onChange={e => { handleChange(e.target.value, \"metaTitle\") }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Category\" required>\r\n                                    <Select mode=\"multiple\" value={data.categoryIds} onChange={v => { handleChange(v, \"categoryIds\") }}\r\n                                        options={\r\n                                            category.map(v => (\r\n                                                {\r\n                                                    value: v._id,\r\n                                                    label: v.name,\r\n                                                }\r\n                                            ))\r\n                                        } >\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Meta-Tag\" required>\r\n                                    <Input placeholder=\"Meta-Tag\" value={data.metaTag} onChange={e => { handleChange(e.target.value, \"metaTag\") }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Meta-Description\" required>\r\n                                    <Input.TextArea rows={4} placeholder=\"Meta-Description\" value={data.metaDescription} onChange={e => { handleChange(e.target.value, \"metaDescription\") }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"High-Light\" required>\r\n                                    <Input.TextArea rows={4} placeholder=\"High-Light...\" value={data.heighlight} onChange={e => { handleChange(e.target.value, \"heighlight\") }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Premium\" required>\r\n                                    <Select value={data.isPremium} onChange={e => { handleChange(e, \"isPremium\") }} >\r\n                                        <Select.Option value={true}>Yes</Select.Option>\r\n                                        <Select.Option value={false}>No</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Best Selling\" required>\r\n                                    <Select value={data.isBestSelling} onChange={e => { handleChange(e, \"isBestSelling\") }} >\r\n                                        <Select.Option value={true}>Yes</Select.Option>\r\n                                        <Select.Option value={false}>No</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Best Selling Combos\" required>\r\n                                    <Select value={data.isBestSellingCombos} onChange={e => { handleChange(e, \"isBestSellingCombos\") }} >\r\n                                        <Select.Option value={true}>Yes</Select.Option>\r\n                                        <Select.Option value={false}>No</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"BirthDay\" required>\r\n                                    <Select value={data.forBirthday} onChange={e => { handleChange(e, \"forBirthday\") }} >\r\n                                        <Select.Option value={true}>Yes</Select.Option>\r\n                                        <Select.Option value={false}>No</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Anniversary\" required>\r\n                                    <Select value={data.forAnniversary} onChange={e => { handleChange(e, \"forAnniversary\") }} >\r\n                                        <Select.Option value={true}>Yes</Select.Option>\r\n                                        <Select.Option value={false}>No</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange(e, \"status\") }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n\r\n                                <Variant {...{ variantDetails: data.variants, parentKay: 'variants', handleChange }} />\r\n                            </Col>\r\n                            <Divider />\r\n                            <br />\r\n                            <Col span={4}>\r\n                                <Form.Item label=\"Thumbnail Photo\">\r\n                                    <UploadImage {...{ fileList: thumbFile, setFileList: setThumbFile }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={20}>\r\n                                <Form.Item label=\"Photo\">\r\n                                    <UploadImage {...{ fileList: file, setFileList: setFile, count: 20 }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst AddLabel = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? `Add User of ${(data.name)}` : `Variants of ${(data.name)}`)}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n            >\r\n                <Varient productId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\nfunction Variant({ variantDetails: data, parentKay, handleChange }) {\r\n    useEffect(() => {\r\n        console.log(parentKay, parentKay === 'variants');\r\n    }, [parentKay])\r\n    return (\r\n        <>\r\n            <div><Divider orientation=\"left\">{parentKay === 'variants' ? \"Variants\" : \"Variant\"}</Divider></div>\r\n            <Row>\r\n                <Col span={4}>\r\n                    <label className=\"req\">Weight</label>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <label className=\"req\">Price</label>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <label className=\"req\">Actual Price (In ₹)</label>\r\n                </Col>\r\n            </Row>\r\n\r\n            {\r\n                data?.map((v, i) => (\r\n                    <React.Fragment key={i}>\r\n                        <Row>\r\n                            <Col span={4}>\r\n                                <Input placeholder=\"Weight\" value={v.weight} onChange={(e) => { handleChange((e.target.value), `${parentKay}.${i}.weight`) }} />\r\n\r\n                            </Col>\r\n                            <Col span={4}>\r\n\r\n                                <Input placeholder=\"Price\" value={v.price} onChange={(e) => { handleChange(util.handleInteger(e.target.value), `${parentKay}.${i}.price`) }} />\r\n                            </Col>\r\n                            <Col span={8}>\r\n\r\n                                <Input placeholder=\"Actual Price\" value={v.actualPrice} onChange={(e) => { handleChange(util.handleFloat(e.target.value), `${parentKay}.${i}.actualPrice`) }} />\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                {\r\n                                    i + 1 === data.length\r\n                                        ? <Button type=\"dashed\" onClick={() => {\r\n                                            handleChange([...data, {}], parentKay);\r\n                                        }}>Add</Button>\r\n                                        : null\r\n                                }\r\n                                {\r\n                                    i + 1 === data.length && i !== 0\r\n                                        ? <Button type=\"dashed\" className=\"mx-2\" danger onClick={() => {\r\n                                            data.pop();\r\n                                            handleChange([...data], parentKay);\r\n                                        }}>Remove</Button>\r\n                                        : null\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </React.Fragment>\r\n                ))\r\n            }\r\n        </>\r\n    );\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'offer';\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n    static details(id) {\r\n        return axios.get(this.baseURL + '/details/' + id);\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, DatePicker } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../services/offer';\r\nimport ProductService from '../../services/product';\r\nimport UserService from '../../services/userList';\r\nimport Pagination from '../components/Pagination';\r\nimport UploadImage from '../../utils/UploadImage';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport dayjs from 'dayjs';\r\nimport moment from 'moment';\r\n\r\n\r\nexport default function Offer() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, });\r\n    const [product, setProduct] = useState([]);\r\n    const [user, setUser] = useState([]);\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 30,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Title',\r\n            dataIndex: 'title',\r\n            width: 150\r\n        },\r\n\r\n        // {\r\n        //     title: 'Discount Type',\r\n        //     dataIndex: 'discountType',\r\n        //     width: 100\r\n        // },\r\n        {\r\n            title: 'Discount Percent',\r\n            dataIndex: 'discountPercent',\r\n            width: 100\r\n        },\r\n        {\r\n            title: 'Max Discount',\r\n            dataIndex: 'maxDiscountValue',\r\n            width: 100\r\n        },\r\n        {\r\n            title: 'Min Order Price',\r\n            dataIndex: 'minimunOrderPrice',\r\n            width: 100\r\n        },\r\n        {\r\n            title: 'Duration',\r\n            dataIndex: 'startDate',\r\n            width: 200,\r\n            render: (v, row) => <span>{moment(v).format('DD MMM YYYY')} To {moment(row.endDate).format('DD MMM YYYY')} </span>\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this User?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ key: v._id, ...v })).reverse());\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    function listProduct() {\r\n        ProductService.listUser()\r\n            .then(res => { setProduct(res.data || []); }).catch(err => { AntdMsg('Product data not loaded', 'error'); });\r\n    }\r\n    function listUser() {\r\n        UserService.listUser()\r\n            .then(res => { setUser(res.data || []); }).catch(err => { AntdMsg('User data not loaded', 'error'); });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n        listProduct()\r\n        listUser()\r\n    }, [qData.page, qData.limit]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Offer</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, product, user }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col xs={24} xl={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, product, user } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [file, setFile] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.details(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFile(res.data.imgs.length ? [...res.data.imgs] : [])\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        console.log('data', data);\r\n    }, [data]);\r\n\r\n    useEffect(() => {\r\n        setData({ ...data, imgs: file })\r\n    }, [file])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Offer'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Title\" required>\r\n                                    <Input placeholder=\"Title\" value={data.title} onChange={e => { handleChange({ title: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Discount Percent\" required>\r\n                                    <Input placeholder=\"Discount Percent\" value={data.discountPercent} onChange={e => { handleChange({ discountPercent: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Max Discount Value\" required>\r\n                                    <Input placeholder=\"Max Discount Amount\" value={data.maxDiscountValue} onChange={e => { handleChange({ maxDiscountValue: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Minimun Order Value\" required>\r\n                                    <Input placeholder=\" Minimun Order Amount\" value={data.minimunOrderPrice} onChange={e => { handleChange({ minimunOrderPrice: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {/* <Col span={24}>\r\n                                <Form.Item label=\"Discount Type\" required>\r\n                                    <Select value={data.discountType} onChange={e => { handleChange({ discountType: e }) }} >\r\n                                        <Select.Option value={'percent'}>Percent</Select.Option>\r\n                                        <Select.Option value={'flat'}>Flat</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col> */}\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Product\" required>\r\n                                    <Select mode=\"multiple\" value={data.productIds} onChange={v => { handleChange({ productIds: v }) }}\r\n                                        options={\r\n                                            product.map(v => (\r\n                                                {\r\n                                                    value: v._id,\r\n                                                    label: v.name,\r\n                                                }\r\n                                            ))\r\n                                        } >\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Duration\" required>\r\n                                    <DatePicker.RangePicker\r\n                                        format='DD MMM YYYY'\r\n                                        value={data.startDate && data.endDate && [dayjs(data.startDate), dayjs(data.endDate)]}\r\n                                        onChange={(e) => { handleChange({ startDate: e?.[0] ? new Date(e?.[0]) : null, endDate: e?.[1] ? new Date(e?.[1]) : null }) }}\r\n                                        style={{ width: '100%' }}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                            {/* <Col span={24}>\r\n                                <Form.Item label=\"User\" required>\r\n                                    <Select mode='multiple' value={data.userIds} onChange={v => { handleChange({ userIds: v }) }}\r\n                                        options={\r\n                                            user.map(v => (\r\n                                                {\r\n                                                    value: v._id,\r\n                                                    label: v.name,\r\n                                                }\r\n                                            ))\r\n                                        } >\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col> */}\r\n                            {/* <Col span={24}>\r\n                                <Form.Item label=\"Description\">\r\n                                    <Input.TextArea placeholder=\"Description\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col> */}\r\n                            {/* <Col span={24}>\r\n                                <Form.Item label=\"Term Conditions\">\r\n                                    <Input.TextArea placeholder=\"Term Condition\" value={data.termCondition} onChange={e => { handleChange({ termCondition: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col> */}\r\n                            {/* <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col> */}\r\n                            <Col span={20}>\r\n                                <Form.Item label=\"Photo\">\r\n                                    <UploadImage {...{ fileList: file, setFileList: setFile, count: 20 }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import React from \"react\";\r\nimport { Card, Layout, Menu } from \"antd\";\r\nimport { Routes, Route, Link } from \"react-router-dom\";\r\nimport Error404 from \"../pages/errors/Error404\";\r\nimport commonObj from \"../../commonObj\";\r\n\r\nimport Coupon from \"../pages/Coupon\";\r\n\r\nimport Application from \"../pages/Application\"\r\nimport Category from \"../pages/Category\";\r\nimport Banner from \"../pages/Banner\";\r\nimport Varient from \"../pages/Product/Varient\";\r\n// import Product from \"../pages/Product/Varient\";\r\nimport UserManagement from \"../pages/Management/userManagement\";\r\nimport Product from \"../pages/Product/Product\";\r\nimport Offer from \"../pages/Offer\";\r\n\r\n\r\nexport default function MyLayout() {\r\n\r\n    return (\r\n        <>\r\n            <Layout style={{ minHeight: '100vh', }}>\r\n                <Layout className=\"site-layout\" >\r\n                    <Layout.Header style={{ padding: 0, height: 'auto' }} >\r\n                        <Menu theme=\"dark\" mode=\"horizontal\" items={[\r\n                            {\r\n\r\n                                label: <Link to={'/offer'}>Offers  </Link>,\r\n                                key: \"offer\"\r\n                            },\r\n                            {\r\n                                label: <Link to={'/coupon'}>Coupon</Link>,\r\n                                key: \"coupon\"\r\n                            },\r\n                            {\r\n                                label: <Link to={'/banner'}>Banner</Link>,\r\n                                key: \"banner\"\r\n                            },\r\n                            {\r\n                                label: <Link to={'/add-new-product'}>Add New Product</Link>,\r\n                                key: \"add-new-product\"\r\n                            },\r\n\r\n                            {\r\n                                label: <Link to={'/category'}>Category</Link>,\r\n                                key: \"category\"\r\n                            },\r\n\r\n                            {\r\n                                label: <Link to={'/application'}>Application</Link>,\r\n                                key: \"application\"\r\n                            },\r\n                            {\r\n                                label: <Link to={'/management'}>User Management</Link>,\r\n                                key: \"management\"\r\n                            },\r\n                            {\r\n                                label: commonObj?.name ? commonObj.name : 'You',\r\n                                key: 'profile',\r\n                                children: [\r\n                                    {\r\n                                        key: 'Profile',\r\n                                        label: 'Profile',\r\n                                    },\r\n                                    {\r\n                                        key: 'Logout',\r\n                                        danger: true,\r\n                                        label: 'Logout',\r\n                                        onClick: () => { window.localStorage.clear(); window.location.reload(); }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]}>\r\n                        </Menu>\r\n                    </Layout.Header>\r\n\r\n                    <Layout.Content>\r\n                        <Card style={{ borderRadius: \"none\" }}>\r\n                            <Routes>\r\n                                <Route path=\"offer\" element={<Offer />}>  </Route>\r\n                                <Route path=\"coupon\" element={<Coupon />}> </Route>\r\n                                <Route path=\"banner\" element={<Banner />} />\r\n                                <Route path=\"application\" element={<Application />} />\r\n                                <Route path=\"category\" element={<Category />} />\r\n                                <Route path=\"management\" element={<UserManagement />} />\r\n                                <Route path=\"add-new-product\" element={<Product />} />\r\n\r\n                                <Route path={'*'} element={<Error404 />} />\r\n                            </Routes>\r\n                        </Card>\r\n                    </Layout.Content>\r\n                </Layout>\r\n            </Layout>\r\n        </>\r\n    );\r\n\r\n}"],"names":["Error404","status","title","subTitle","extra","to","type","service","data","axios","params","query","id","ids","baseURL","this","MyPagination","props","qData","setQData","total","showTotal","start","page","limit","end","pageSize","current","onChange","pp","showSizeChanger","AntdMsg","$msg","$type","message","Coupon","useState","setData","loading","setLoading","selected","setSelected","user","setUser","addNewModalRef","useRef","columns","width","render","v","row","i","dataIndex","isActive","color","onConfirm","deleteData","_id","okText","cancelText","size","danger","icon","EditOutlined","onClick","openForm","filter","item","hidden","list","then","res","map","key","reverse","catch","err","finally","tableColumns","ellipsis","console","log","fixed","length","tableProps","bordered","Search","showHeader","footer","rowSelection","selectedRowKeys","tableLayout","undefined","useEffect","UserService","level","style","marginTop","pagination","position","dataSource","scroll","y","x","AddForm","ref","e","label","value","onSubmitCapture","className","gutter","xs","xl","marginBottom","showSearch","allowClear","placeholder","options","span","htmlType","float","forwardRef","open","setOpen","aspect","ajxRequesting","setAjxRequesting","setFileList","handleChange","Object","entries","forEach","ent","varDt","k","keys","split","parseInt","useImperativeHandle","dt","fileType","save","avatar","top","onOk","okButtonProps","disabled","onCancel","destroyOnClose","maskClosable","spinning","indicator","fontSize","spin","layout","required","target","maxDiscountValue","minimunOrderPrice","discountType","code","format","expiryDate","discountValue","mode","userIds","name","typeOfUse","TinyMce","height","menubar","plugins","toolbar","content_style","initialValue","editorRef","onInit","evt","editor","init","file_browser_callback_types","file_picker_callback","cb","meta","input","document","createElement","setAttribute","onchange","file","files","reader","FileReader","readAsDataURL","onload","result","click","deprecation_warnings","onSelectionChange","getContent","Application","currentTab","setCurrentTab","changeForm","getDetails","activeKey","items","children","borderTop","Aboutus","TandC","FAQ","Contactus","PrivacyPolicy","display","flexDirection","paddingTop","paddingRight","editableStr","setEditableStr","a","setA","b","setB","padding","editable","pre","address","Category","parentId","addSubNewModalRef","NewForm","sm","md","lg","isTop","slug","util","url","config","fileList","count","cropImage","listType","uploadImage","onSuccess","onError","onProgress","fmData","FormData","onUploadProgress","event","percent","loaded","append","fileService","uid","handleOnChange","fl","handleRemove","shape","quality","rotate","accept","customRequest","onRemove","Banner","src","moment","_","imgUrl","priority","Varient","productId","addNewLabelRef","AddLabel","cateId","price","kg","Address","userId","city","pin","state","street1","street2","UserManagement","ModelModalRef","ModelModal","email","phone","Product","category","setCategory","expandable","categoryService","thumbFile","setThumbFile","setFile","isPremium","isBestSelling","forBirthday","forAnniversary","isBestSellingCombos","variants","imgs","thumbImg","rows","description","metaTitle","categoryIds","metaTag","metaDescription","heighlight","Variant","variantDetails","parentKay","orientation","weight","actualPrice","pop","Offer","product","setProduct","endDate","ProductService","discountPercent","productIds","startDate","dayjs","Date","MyLayout","minHeight","theme","commonObj","window","localStorage","clear","location","reload","borderRadius","path","element"],"sourceRoot":""}