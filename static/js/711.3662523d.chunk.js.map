{"version":3,"file":"static/js/711.3662523d.chunk.js","mappings":"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","sources":["views/pages/errors/Error404.js","services/coupon.js","services/userList.js","views/components/Pagination.js","utils/Antd.js","views/pages/Coupon.js","services/application.js","utils/TinyMce.js","views/pages/Application.js","services/category.js","views/pages/Category.js","services/banner.js","services/file.js","utils/UploadImage.js","views/pages/Banner.js","services/variant.js","views/pages/Product/Varient.js","services/userMange.js","services/address.js","views/pages/Management/Address.js","services/product.js","views/pages/Management/Cart.js","views/pages/Management/userManagement.js","views/pages/Product/Product.js","services/offer.js","views/pages/Offer.js","views/pages/Product/AddOn.js","services/homepageItems.js","views/pages/HomePageItems.js","services/orders.js","views/pages/OrderDetails.js","views/pages/Order.js","services/type.js","views/pages/Type/List.js","views/pages/Type/Type.js","services/delivery.js","views/pages/DeliveryManagement/deliveryType.js","views/pages/DeliveryManagement/delivery.js","views/layout/Layout.js"],"sourcesContent":["import { Result, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Error404() {\r\n    return (\r\n        <Result\r\n            status=\"404\"\r\n            title=\"404\"\r\n            subTitle=\"Sorry, the page you visited does not exist.\"\r\n            extra={<Link to=\"/\"><Button type=\"primary\">Back Home</Button></Link>}\r\n        />\r\n    );\r\n}\r\n\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = '';\r\n\r\n    static list(data) {\r\n        return axios.get(\"coupon/list\", { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(\"coupon/save\", data, { params: query });\r\n    }\r\n    static delete(id) {\r\n        return axios.post('coupon/delete', { ids: id });\r\n    }\r\n    static details(id) {\r\n        return axios.get('coupon/details/' + id);\r\n    }\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'user';\r\n\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + '/list-user', { params: data });\r\n    }\r\n    static saveUser(data) {\r\n        return axios.post(this.baseURL + \"/save-user\", data);\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + '/delete-user', { ids: id });\r\n    }\r\n}","import { Pagination, Tag } from 'antd';\r\nexport default function MyPagination(props) {\r\n    const { qData, setQData } = props;\r\n\r\n    const handleChange = (page, pp) => {\r\n        if (qData.limit !== pp) {\r\n            setQData({ ...qData, page: 1, limit: pp });\r\n        } else {\r\n            setQData({ ...qData, page: page });\r\n        }\r\n    }\r\n\r\n    const showTotal = () => {\r\n        let start = (qData.page - 1) * qData.limit * 1 + 1;\r\n        let end = qData.page * qData.limit;\r\n        return <Tag>{'Showing ' + start + ' - ' + end + ' out of ' + qData.total}</Tag>\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                qData.total > 0\r\n                    ? <Pagination\r\n                        total={qData.total}\r\n                        showTotal={showTotal}\r\n                        pageSize={qData.limit}\r\n                        current={qData.page}\r\n                        onChange={handleChange}\r\n                        showSizeChanger={true}\r\n                    />\r\n                    : null\r\n            }\r\n        </>\r\n    );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState, forwardRef } from 'react';\r\nimport moment from 'moment';\r\nimport {\r\n    DatePicker,\r\n    Checkbox,\r\n    message,\r\n    Upload,\r\n    Modal,\r\n} from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nexport function AntdDatepicker(props) {\r\n    let {\r\n        format,\r\n        getFormat = 'YYYY-MM-DD',\r\n        inputReadOnly,\r\n        value,\r\n        defaultValue,\r\n        onChange,\r\n        disablePastDate = false,\r\n        disableUpcomingDate = false,\r\n        ...rest\r\n    } = props;\r\n\r\n\r\n    let otherProps = {};\r\n    if (typeof value !== \"undefined\") {\r\n        otherProps.value = moment(new Date(value ? value : new Date()), format || 'DD MMM YYYY');\r\n    }\r\n    if (typeof defaultValue !== \"undefined\") {\r\n        otherProps.defaultValue = defaultValue ? moment(new Date(defaultValue)) : null\r\n    }\r\n    if (typeof onChange !== \"undefined\") {\r\n        otherProps.onChange = (dt) => {\r\n            onChange(dt ? moment(dt).format(getFormat) : null);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        onChange(moment(value).format(getFormat))\r\n    }, [])\r\n\r\n    return (\r\n        <DatePicker\r\n            format={format || 'DD MMM YYYY'}\r\n            inputReadOnly={inputReadOnly || true}\r\n            disabledDate={(current) => {\r\n                let customDate = moment().format(\"YYYY-MM-DD\");\r\n                if (disablePastDate) {\r\n                    return current && current < moment(customDate, \"YYYY-MM-DD\");\r\n                }\r\n                if (disableUpcomingDate) {\r\n                    return current && current > moment(customDate, \"YYYY-MM-DD\");\r\n                }\r\n            }}\r\n            {...otherProps}\r\n            {...rest}\r\n            style={{ width: '100%' }}\r\n        />\r\n    )\r\n}\r\n\r\nexport function MultiChechBox(props) {\r\n    const { col = 3 } = props;\r\n    const type = typeof props.value === 'object' ? 'array' : 'string';\r\n\r\n    let [values, setValues] = useState();\r\n    let [options, setOptions] = useState([]);\r\n\r\n    const handleChange = (e) => {\r\n        const val = typeof e.target.value * 1 !== 'NaN' ? e.target.value + '' : e.target.value * 1;\r\n        if (e.target.checked) {\r\n            values.push(val)\r\n            setValues([...values]);\r\n        } else {\r\n            if (values.indexOf(val) > -1) {\r\n                values.splice(values.indexOf(val), 1);\r\n                setValues([...values])\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (type === 'string') {\r\n            values = props.value ? props.value.split(',').map((v) => v * 1) : [];\r\n            setValues([...values]);\r\n        } else {\r\n            setValues([...props.value]);\r\n        }\r\n    }, [props.value]);\r\n\r\n    useEffect(() => {\r\n        let opts = props.options.map((v, i) => {\r\n            if (v.value) {\r\n                return { value: v.value * 1, label: v.label }\r\n            } else if (v.id) {\r\n                return { value: v.id * 1, label: v.name || v.title || v.label }\r\n            } else if (v._id) {\r\n                return { value: v._id + '', label: v.name || v.title || v.label }\r\n            }\r\n            return null;\r\n        });\r\n        setOptions(opts);\r\n    }, [props.options]);\r\n\r\n    useEffect(() => {\r\n        props.onChange(values)\r\n    }, [(values || []).join(\",\")])\r\n\r\n    return (\r\n        <div className=\"row mingap\" >\r\n            {\r\n                options.map((v, i) => (\r\n                    <div className={`col-md-${col} mb-2 form-group`} key={i}>\r\n                        <div className=\"border p-1\">\r\n                            <Checkbox\r\n                                value={typeof v.value * 1 !== 'NaN' ? v.value + '' : v.value * 1}\r\n                                checked={values?.includes(typeof v.value * 1 !== 'NaN' ? v.value + '' : v.value * 1)}\r\n                                onChange={handleChange}\r\n                                className=\"mx-0 mr15\"\r\n                            >\r\n                                {v.label}\r\n                            </Checkbox>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport function AntdMsg($msg, $type = 'success') {\r\n    if ($msg) {\r\n        if ($type === 'success')\r\n            message.success($msg);\r\n        if ($type === 'error')\r\n            message.error($msg);\r\n        if ($type === 'warning')\r\n            message.warning($msg);\r\n    }\r\n};\r\n\r\nfunction getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n}\r\n\r\nconst UploadImage = forwardRef((props, ref) => {\r\n    const { fileCount } = props;\r\n    const fileRef = ref;\r\n    let { files } = props;\r\n    useEffect(() => {\r\n        setFileList(files)\r\n    }, [files])\r\n\r\n    if (files.length) {\r\n        files = files?.map((v, i) => {\r\n            return { uid: i, url: v.url, status: 'done', name: v.name };\r\n        });\r\n    } else {\r\n        files = [];\r\n    }\r\n\r\n\r\n    const [fileList, setFileList] = useState(files);\r\n\r\n    const dummyRequest = ({ file, onSuccess }) => {\r\n        setTimeout(() => {\r\n            onSuccess(\"ok\");\r\n            if (!fileRef.current.uploadingFiles) {\r\n                fileRef.current.uploadingFiles = [];\r\n            }\r\n            fileRef.current.uploadingFiles?.push(file);\r\n        }, 0);\r\n    };\r\n    const [previewVisible, setPreviewVisible] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState('');\r\n    const [previewTitle, setPreviewTitle] = useState('');\r\n\r\n    const handleCancel = () => setPreviewVisible(false);\r\n\r\n    const handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n        setPreviewVisible(true);\r\n        setPreviewImage(file.url || file.preview);\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\r\n    };\r\n\r\n    const handleChange = ({ fileList: newFileList }) => {\r\n        setFileList(newFileList);\r\n    };\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            <PlusOutlined />\r\n            <div style={{ marginTop: 8 }}>Upload</div>\r\n        </div>\r\n    );\r\n    return (\r\n        <>\r\n            <Upload\r\n                // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                listType=\"picture-card\"\r\n                customRequest={dummyRequest}\r\n                fileList={fileList}\r\n                onPreview={handlePreview}\r\n                onChange={(value) => {\r\n                    if (value.file.status === 'removed' || value.file.status) {\r\n                        handleChange(value)\r\n                    }\r\n                }}\r\n                beforeUpload={\r\n                    (file) => {\r\n                        if (!file.type.includes('image/')) {\r\n                            message.error('Invalid file type');\r\n                            return false\r\n                        }\r\n                    }\r\n                }\r\n                onRemove={(e) => {\r\n                    if (!fileRef.current.deletingFiles) {\r\n                        fileRef.current.deletingFiles = [];\r\n                    }\r\n                    if (!e.thumbUrl) {\r\n                        fileRef.current.deletingFiles?.push(e);\r\n                    } else {\r\n                        fileRef.current.uploadingFiles = fileRef.current.uploadingFiles.filter((v) => { return v.uid !== e.uid })\r\n                    }\r\n                }}\r\n            >\r\n                {fileList.length >= fileCount ? null : uploadButton}\r\n            </Upload>\r\n            <Modal\r\n                open={previewVisible}\r\n                title={previewTitle}\r\n                footer={null}\r\n                onCancel={handleCancel}\r\n            >\r\n                <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n            </Modal>\r\n        </>\r\n    );\r\n})\r\n\r\nexport default UploadImage;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag, DatePicker } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\n\r\nimport service from '../../services/coupon';\r\nimport UserService from '../../services/userList';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport dayjs from 'dayjs';\r\nimport moment from 'moment';\r\nimport util from '../../utils/util';\r\n\r\nexport default function Coupon() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, });\r\n    const [user, setUser] = useState([]);\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 30,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Title',\r\n            width: 150,\r\n            dataIndex: 'title',\r\n        },\r\n        {\r\n            title: 'Code',\r\n            width: 100,\r\n            dataIndex: 'code',\r\n        },\r\n        {\r\n            title: 'EndDate',\r\n            width: 100,\r\n            dataIndex: 'expiryDate',\r\n            render: (v, row) => <span>{moment(v).format('DD MMM YYYY')}</span>\r\n        },\r\n        {\r\n            title: 'Discount Value',\r\n            width: 100,\r\n            dataIndex: 'discountValue',\r\n        },\r\n        {\r\n            title: 'Coupon Use',\r\n            width: 100,\r\n            dataIndex: 'typeOfUse',\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 60,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this User?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ key: v._id, ...v })).reverse());\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    function listUser() {\r\n        UserService.listUser()\r\n            .then(res => { setUser(res.data || []); }).catch(err => { AntdMsg('User data not loaded', 'error'); });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n    console.log(tableColumns)\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n        listUser()\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Coupon</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, user }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col xs={24} xl={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by title or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col xs={24} xl={4}>\r\n                    <Form.Item>\r\n                        <Select value={qData.status} allowClear placeholder=\"Search By Date\" onChange={e => { setQData({ ...qData, expiryDate: e }) }} >\r\n                            <Select.Option value=\"expired\">Expired</Select.Option>\r\n                            <Select.Option value=\"active\">Active</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, user } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.details(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.avatar ? [res.data?.avatar] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ code: util.removeSpecialChars(data.title)?.toUpperCase() });\r\n        }\r\n    }, [data.title]);\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Coupon'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={800}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Title\" required>\r\n                                    <Input placeholder=\"Title\" value={data.title} onChange={e => { handleChange({ title: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Code\" required>\r\n                                    <Input placeholder=\"Code\" value={data.code} onChange={e => { handleChange({ code: util.removeSpecialChars(e.target.value)?.toUpperCase() }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Form.Item label=\"Discount Type\" required>\r\n                                    <Select value={data.discountType} onChange={e => { handleChange({ discountType: e }) }} >\r\n                                        <Select.Option value={'percent'}>Percent</Select.Option>\r\n                                        <Select.Option value={'flat'}>Flat</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Form.Item label=\"Discount Value\" required>\r\n                                    <Input placeholder=\"discountValue\" value={data.discountValue} onChange={e => { handleChange({ discountValue: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Form.Item label=\"Max Discount Value\" required>\r\n                                    <Input placeholder=\"Max DiscountValue\" value={data.maxDiscountValue} onChange={e => { handleChange({ maxDiscountValue: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Form.Item label=\"Minimun Order Value\" required>\r\n                                    <Input placeholder=\" Minimun Order Amount\" value={data.minimunOrderPrice} onChange={e => { handleChange({ minimunOrderPrice: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                            <Col span={6}>\r\n                                <Form.Item label=\"Use Type\" required>\r\n                                    <Select value={data.typeOfUse} onChange={e => { handleChange({ typeOfUse: e }) }} >\r\n                                        <Select.Option value=\"Single\">Single Use</Select.Option>\r\n                                        <Select.Option value=\"Multiple\">Multiple Use</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={18}>\r\n                                <Form.Item label=\"Choose Users (Don't choose any user if coupon is applicable to all users)\" >\r\n                                    <Select mode='multiple' value={data.userIds} onChange={v => { handleChange({ userIds: v }) }}\r\n                                        options={\r\n                                            user.map(v => (\r\n                                                {\r\n                                                    value: v._id,\r\n                                                    label:<>\r\n                                                    <p style={{ padding: \"0px\", margin: \"0px\" }}>{v?.name}</p><p style={{ fontSize: \"12px\", margin: \"0px\" }}><Typography.Text type=\"danger\">@{v?.phone}</Typography.Text></p>\r\n                                                    </>,\r\n                                                }\r\n                                            ))\r\n                                        } >\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Form.Item label=\"Expiry Date\" required>\r\n                                    <DatePicker value={data.expiryDate && dayjs(moment(data.expiryDate).format(\"YYYY-MM-DD\"))}\r\n                                        format='DD MMM YYYY'\r\n                                        disabledDate={(current) => current.isBefore(moment(new Date()).subtract(1, \"day\"))}\r\n                                        onChange={(e) => { handleChange({ expiryDate: new Date(e) }) }} style={{ width: '100%' }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Form.Item label=\"For First Order\">\r\n                                    <Select value={data.forFirst} defaultValue={false} onChange={e => { handleChange({ forFirst: e }) }} >\r\n                                        <Select.Option value={true}>Yes</Select.Option>\r\n                                        <Select.Option value={false}>No</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'application';\r\n\r\n    static detail(data) {\r\n        return axios.get(this.baseURL + '/details/' + data.type, { params: data });\r\n    }\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n}","import React, { useRef } from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\n\r\n\r\nexport default function TinyMce(props) {\r\n    let { height = 400, menubar = false, plugins, toolbar, content_style, initialValue, onChange } = props;\r\n    if (!plugins) {\r\n        plugins = [\r\n            'advlist autolink lists link image charmap print preview anchor',\r\n            'searchreplace visualblocks code fullscreen',\r\n            'insertdatetime media table paste code help wordcount forecolor backcolor textcolor',\r\n            'image paste table code'\r\n        ];\r\n    }\r\n    if (!toolbar) {\r\n        toolbar = 'undo redo | formatselect | bold italic backcolor | forecolor emoticons'\r\n            + '| table tabledelete | tableprops tablerowprops tablecellprops'\r\n            + '| alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | help | image link | imageupload | code | fullscreen';\r\n    }\r\n    if (!content_style) {\r\n        content_style = 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }';\r\n    }\r\n\r\n    const editorRef = useRef(null);\r\n    const editorContent = () => {\r\n        if (editorRef.current) {\r\n            onChange(editorRef.current.getContent())\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Editor\r\n                onInit={(evt, editor) => editorRef.current = editor}\r\n                {...{ initialValue }}\r\n                init={{\r\n                    height, menubar, plugins, toolbar, content_style,\r\n\r\n                    file_browser_callback_types: 'image',\r\n                    file_picker_callback: function (cb, value, meta) {\r\n                        const input = document.createElement(\"input\");\r\n                        input.setAttribute(\"type\", \"file\");\r\n                        input.setAttribute(\"accept\", \"image/*\");\r\n                        input.onchange = function () {\r\n                            const file = this.files[0];\r\n                            const reader = new FileReader();\r\n                            reader.readAsDataURL(file);\r\n                            reader.onload = () => { cb(reader.result, { title: file.name }); };\r\n                        };\r\n                        input.click();\r\n                    },\r\n                    deprecation_warnings: false\r\n                }}\r\n                onSelectionChange={editorContent}\r\n            />\r\n        </>\r\n    );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Button, Form, Input, Row, Col, Spin, Typography, Tabs, Card } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, } from 'react';\r\nimport service from '../../services/application';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport TinyMce from \"../../utils/TinyMce\"\r\n\r\nexport default function Application() {\r\n\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [currentTab, setCurrentTab] = useState(0);\r\n\r\n    const handleChange = (value, changeForm) => {\r\n        if (changeForm) {\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n        }\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        try {\r\n            (() => {\r\n                return currentTab === 0 ? service.save({ ...data, type: 'aboutus', data: data.data }) :\r\n                    currentTab === 1 ? service.save({ ...data, type: 'termcondition', data: data.data }) :\r\n                        currentTab === 2 ? service.save({ ...data, type: 'faq', data: data.data }) :\r\n                            currentTab === 3 ? service.save({ ...data, type: 'contactus', data: data.data }) :\r\n                                currentTab === 4 ? service.save({ ...data, type: 'privacy-policy', data: data.data }) : null\r\n\r\n            })().then(res => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                setCurrentTab((currentTab + 1) % 5);\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        } catch (err) {\r\n            AntdMsg(err.message, 'error');\r\n        }\r\n    }\r\n\r\n    const getDetails = (data) => {\r\n        setAjxRequesting(true);\r\n\r\n        service.detail(data).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (currentTab === 0) {\r\n            getDetails({ _id: data._id, type: \"aboutus\" });\r\n        } else if (currentTab === 1) {\r\n            getDetails({ _id: data._id, type: \"termcondition\" });\r\n        } else if (currentTab === 2) {\r\n            getDetails({ _id: data._id, type: \"faq\" });\r\n        } else if (currentTab === 3) {\r\n            getDetails({ _id: data._id, type: \"contactus\" });\r\n        } else if (currentTab === 4) {\r\n            getDetails({ _id: data._id, type: \"privacy-policy\" });\r\n        }\r\n    }, [currentTab])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                <Tabs activeKey={currentTab} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setCurrentTab(v); }}\r\n                    items={[\r\n                        {\r\n                            label: \"About us\",\r\n                            key: 0,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <Aboutus {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        },\r\n                        {\r\n                            label: \"Terms & Condition\",\r\n                            key: 1,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <TandC {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        },\r\n                        {\r\n                            label: \"FAQ\",\r\n                            key: 2,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <FAQ {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        },\r\n                        {\r\n                            label: \"Contact us\",\r\n                            key: 3,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <Contactus {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        },\r\n                        {\r\n                            label: \"Privacy Policy\",\r\n                            key: 4,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <PrivacyPolicy {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        }\r\n                    ]}\r\n                />\r\n                <div style={{ display: \"flex\", flexDirection: \"row-reverse\", paddingTop: \"5px\", paddingRight: \"70px\" }}>\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>{currentTab === 4 ? \"Save\" : \"Next\"}</Button>\r\n                </div>\r\n            </Spin>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nconst Aboutus = ({ data, handleChange }) => {\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Data\" required>\r\n                            <TinyMce initialValue={data.data} onChange={(v) => { data.data = v }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TandC = ({ data, handleChange }) => {\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Data\" required>\r\n                            <TinyMce initialValue={data.data} onChange={(v) => { data.data = v }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst FAQ = ({ data, handleChange }) => {\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Data\" required>\r\n                            <TinyMce initialValue={data.data} onChange={(v) => { data.data = v }} />\r\n\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst Contactus = ({ data, handleChange }) => {\r\n    const [editableStr, setEditableStr] = useState('This is an editable text.');\r\n    const [a, setA] = useState([1])\r\n    const [b, setB] = useState([1])\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]} style={{ width: \"100%\", padding: \"0 5px\" }}>\r\n                    <Col xs={24} xl={6}>\r\n\r\n                        {a.map(() => {\r\n                            return <Form.Item label=\"Email\" required>\r\n\r\n                                <Typography.Paragraph\r\n\r\n                                    style={{ marginTop: \"8px\" }}\r\n                                    editable={{\r\n                                        onChange: setEditableStr,\r\n                                    }}\r\n                                >\r\n                                    {editableStr}\r\n                                </Typography.Paragraph>\r\n                            </Form.Item>\r\n                        })}\r\n                        <Button onClick={() => setA((pre) => {\r\n                            return [...pre, 1]\r\n                        })}>Add</Button>\r\n                    </Col>\r\n                    <Col xs={24} xl={6}>\r\n                        {b.map(() => {\r\n                            return <Form.Item label=\"Phone Number\" required>\r\n                                <Typography.Paragraph\r\n                                    style={{ marginTop: \"8px\" }}\r\n                                    editable={{\r\n                                        onChange: setEditableStr,\r\n                                    }}\r\n                                >\r\n                                    {editableStr}\r\n                                </Typography.Paragraph>\r\n                            </Form.Item>\r\n                        })}\r\n                        <Button onClick={() => setB((pre) => {\r\n                            return [...pre, 1]\r\n                        })}>Add</Button>\r\n                    </Col>\r\n                    <Col xs={24} xl={12}>\r\n                        <Form.Item label=\"Address\" required>\r\n                            <Input placeholder=\"Street No: 9, Delhi: 110054\" value={data.data?.address} onChange={e => { handleChange({ data: { ...data.data, address: e.target.value } }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\nconst PrivacyPolicy = ({ data, handleChange }) => {\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Data\" required>\r\n                            <TinyMce initialValue={data.data} onChange={(v) => { data.data = v }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = '/ecommerce/';\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + \"category/list\", { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"category/save\", data, { params: query });\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + 'category/delete', { ids: id });\r\n    }\r\n    static details(id) {\r\n        return axios.get(this.baseURL + 'category/details/' + id);\r\n    }\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../components/Pagination';\r\nimport service from '../../services/category';\r\nimport util from '../../utils/util';\r\nimport { AntdMsg } from '../../utils/Antd';\r\n\r\n\r\nexport default function Category({ parentId }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, parentId });\r\n    const addNewModalRef = useRef();\r\n    const addSubNewModalRef = useRef();\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 25,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            width: 200,\r\n        },\r\n        {\r\n            title: 'Lable',\r\n            dataIndex: 'lable',\r\n            width: 100,\r\n            render: (v, row) => {\r\n                return <Button onClick={() => { addSubNewModalRef.current.openForm(row) }} > Detail</Button>\r\n            }\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !parentId\r\n                    ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Category</Typography.Title>\r\n                    : null\r\n            }\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, parentId }} />\r\n            <NewForm ref={addSubNewModalRef} ></NewForm>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col\r\n                    xs={{ span: 24 }}\r\n                    sm={{ span: 16 }}\r\n                    md={{ span: 10 }}\r\n                    lg={{ span: 4 }}\r\n                >\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, parentId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            console.log('dt', dt);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { parentId, isTop: false }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.details(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || '') });\r\n        }\r\n    }, [data.name]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Category'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"is Top\" required>\r\n                                    <Select value={data.isTop} onChange={e => { handleChange({ isTop: e }) }} >\r\n                                        <Select.Option value={true}>Yes</Select.Option>\r\n                                        <Select.Option value={false}>No</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst NewForm = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={<>Data of &nbsp;<span style={{ color: 'red' }}>{data.name}</span></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n                footer={null}\r\n            >\r\n                <Category parentId={data._id}></Category>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'banner';\r\n\r\n    // for Banners : \r\n    static bannerDetails(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static bannerList(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static bannerSave(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static bannerDelete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'file';\r\n\r\n    static get(url) {\r\n        return axios.get(\"../\" + url);\r\n    }\r\n    static save(data, config) {\r\n        return axios.post(this.baseURL + \"/save\", data, config);\r\n    }\r\n    static remove(data) {\r\n        return axios.post(this.baseURL + \"/remove\", data);\r\n    }\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Upload } from \"antd\";\r\nimport ImgCrop from 'antd-img-crop';\r\nimport fileService from \"../services/file\";\r\nimport React from \"react\";\r\n\r\nconst UploadImage = ({ fileList, setFileList, count = 1, cropImage = null, disabled = false, listType = \"picture-card\" }) => {\r\n    const uploadImage = async options => {\r\n        const { onSuccess, onError, file, onProgress } = options;\r\n\r\n        const fmData = new FormData();\r\n        const config = { onUploadProgress: event => { onProgress({ percent: (event.loaded / event.total) * 100 }); } };\r\n        fmData.append(\"file\", file);\r\n        try {\r\n            fileService.save(fmData, config).then(res => {\r\n                onSuccess(\"Ok\");\r\n                setFileList([...fileList, { uid: res.data.uid, url: res.data.url, name: res.data.name }]);\r\n            })\r\n        } catch (err) {\r\n            onError({ err });\r\n        }\r\n    };\r\n\r\n    const handleOnChange = ({ file, fl }) => {\r\n        if (typeof fl !== typeof []) {\r\n            fl = [];\r\n        }\r\n        setFileList(fl);\r\n\r\n    };\r\n    const handleRemove = (file) => {\r\n        fileService.remove({ uid: file.uid }).then(res => {\r\n        })\r\n    };\r\n\r\n    if (cropImage) {\r\n        if (typeof cropImage !== typeof {}) {\r\n            cropImage = {};\r\n        }\r\n        cropImage.aspect = cropImage.aspect || 1;\r\n        cropImage.shape = cropImage.shape || 'rect';\r\n        cropImage.quality = cropImage.quality || 1;\r\n        return (\r\n            <ImgCrop rotate aspect shape={cropImage.shape} quality={cropImage.quality} >\r\n                <Upload\r\n                    accept=\"image/*\"\r\n                    customRequest={uploadImage}\r\n                    onChange={handleOnChange}\r\n                    onRemove={handleRemove}\r\n                    listType={listType}\r\n                    fileList={fileList}\r\n                    className=\"image-upload-grid\"\r\n                    disabled={disabled}\r\n                >\r\n                    {fileList?.length >= count ? null : <div>Upload</div>}\r\n                </Upload>\r\n            </ImgCrop>\r\n        );\r\n    } else {\r\n        return <Upload\r\n            accept=\"image/*\"\r\n            customRequest={uploadImage}\r\n            onChange={handleOnChange}\r\n            onRemove={handleRemove}\r\n            listType={listType}\r\n            fileList={fileList}\r\n            className=\"image-upload-grid\"\r\n            disabled={disabled}\r\n        >\r\n            {fileList?.length >= count ? null : <div>Upload</div>}\r\n        </Upload>\r\n    }\r\n\r\n};\r\n\r\nexport default UploadImage","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Image, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport moment from \"moment\";\r\nimport service from '../../services/banner';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport UploadImage from '../../utils/UploadImage';\r\nimport util from \"../../utils/util\";\r\n\r\n\r\nexport default function Banner() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo' });\r\n    const addNewModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 20,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Image',\r\n            dataIndex: 'image',\r\n            width: 100,\r\n            render: (v) => {\r\n                return <Image src={v} height={80} />\r\n            }\r\n        },\r\n        {\r\n            title: 'Uploaded At',\r\n            dataIndex: 'createdAt',\r\n            width: 100,\r\n            render: (v) => {\r\n                return moment(v).format(\"dddd, MMMM Do YYYY, h:mm:ss a\");\r\n            }\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this image?. Be sure to delete the image from server.\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.bannerList(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.bannerDelete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Banners</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.bannerDetails(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.image ? [res.data?.image] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.bannerSave(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ image: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Banner'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Photo\">\r\n                                    <UploadImage {...{ fileList, setFileList }} count={1} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'ecommerce/variant/';\r\n\r\n    static detailUser(id, data) {\r\n        return axios.get(this.baseURL + 'details/' + id, { params: data });\r\n    }\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + 'list', { params: data });\r\n    }\r\n    static saveUser(data, query) {\r\n        return axios.post(this.baseURL + \"save\", data, { params: query });\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + 'delete', { ids: id });\r\n    }\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Input } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport util from '../../../utils/util';\r\nimport service from '../../../services/variant';\r\n\r\nexport default function Varient({ productId }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, productId, });\r\n    const addNewModalRef = useRef();\r\n    const addNewLabelRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Category',\r\n            dataIndex: 'cateId',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Color',\r\n            dataIndex: 'color',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Inventory',\r\n            dataIndex: 'inventory',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Strile',\r\n            dataIndex: 'strile',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Total',\r\n            dataIndex: 'total',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Unit',\r\n            dataIndex: 'unite',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Volume',\r\n            dataIndex: 'volume',\r\n        },\r\n        {\r\n            title: 'Price',\r\n            dataIndex: 'price',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Kilo-Gram',\r\n            dataIndex: 'kg',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n    function list() {\r\n        setLoading(true);\r\n        service.listUser(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n    const deleteData = (id) => {\r\n        service.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n    return (\r\n        <>\r\n            {!productId ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Varient</Typography.Title> : null}\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, productId }} />\r\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data ?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, productId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { productId }\r\n            );\r\n        }\r\n    }));\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailUser(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveUser(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || \"\") });\r\n        }\r\n    }, [data.name]);\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Varient'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n\r\n                                <Form.Item label=\"Category\" required>\r\n                                    <Input placeholder=\"Category\" value={data.cateId} onChange={e => { handleChange({ cateId: e.target.value }) }} />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Price\" required>\r\n                                    <Input placeholder=\"price\" value={data.price} onChange={e => { handleChange({ price: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n\r\n                                <Form.Item label=\"Color\" required>\r\n                                    <Input placeholder=\"Color\" value={data.color} onChange={e => { handleChange({ color: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n\r\n                                <Form.Item label=\"Kilo-Gram\" required>\r\n                                    <Input placeholder=\"Kilo-Gram\" value={data.kg} onChange={e => { handleChange({ kg: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst AddLabel = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add User' : 'List of Varient')}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n            >\r\n                <Varient productId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'user';\r\n\r\n    static detailUser(id, data) {\r\n        return axios.get(this.baseURL + '/details-user/' + id, { params: data });\r\n    }\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + '/list-user', { params: data });\r\n    }\r\n    static saveUser(data, query) {\r\n        return axios.post(this.baseURL + \"/save-user\", data, { params: query });\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + '/delete-user', { ids: id });\r\n    }\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'user';\r\n\r\n    static detailJob(id, data) {\r\n        return axios.get(this.baseURL + '/address/details' + id, { params: data });\r\n    }\r\n    static listJob(data) {\r\n        return axios.get(this.baseURL + '/address/list', { params: data });\r\n    }\r\n    static saveJob(data, query) {\r\n        return axios.post(this.baseURL + '/address/save', data, { params: query });\r\n    }\r\n    static deleteJob(id) {\r\n        return axios.post(this.baseURL + '/address/delete', { ids: id });\r\n    }\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Input } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport util from '../../../utils/util';\r\nimport service from '../../../services/address';\r\n\r\n\r\nexport default function Address({ userId }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, userId });\r\n    const addNewModalRef = useRef();\r\n    const addNewLabelRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'City',\r\n            dataIndex: 'city',\r\n\r\n        },\r\n        {\r\n            title: 'Pin',\r\n            dataIndex: 'pin',\r\n        },\r\n        {\r\n            title: 'State',\r\n            dataIndex: 'state',\r\n        },\r\n        {\r\n            title: 'Street 1',\r\n            dataIndex: 'street1',\r\n        },\r\n        {\r\n            title: 'Street 2',\r\n            dataIndex: 'street2',\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.listJob(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.deleteJob(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !userId\r\n                    ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title>\r\n                    : null\r\n            }\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, userId }} />\r\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected datas?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, userId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            console.log('dt', dt);\r\n            setData(\r\n                dt\r\n                    ? { ...dt }\r\n                    : { userId }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveJob(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || '') });\r\n        }\r\n    }, [data.name]);\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"City\" required>\r\n                                    <Input placeholder=\"City\" value={data.city} onChange={e => { handleChange({ city: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Pin\" required>\r\n                                    <Input placeholder=\"Pin\" value={data.pin} onChange={e => { handleChange({ pin: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"State\" required>\r\n                                    <Input placeholder=\"State\" value={data.state} onChange={e => { handleChange({ state: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Street 1\" required>\r\n                                    <Input placeholder=\"Street 1\" value={data.street1} onChange={e => { handleChange({ street1: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Street 2\" required>\r\n                                    <Input placeholder=\"Street 2\" value={data.street2} onChange={e => { handleChange({ street2: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst AddLabel = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add User' : 'List of Varient')}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n            >\r\n                <Address productId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'ecommerce/product/';\r\n\r\n\r\n    static detailProduct(id, data) {\r\n        return axios.get(this.baseURL + 'details/' + id, { params: data });\r\n    }\r\n    static listProduct(data) {\r\n        return axios.get(this.baseURL + 'list', { params: data });\r\n    }\r\n    static saveProduct(data, query) {\r\n        return axios.post(this.baseURL + \"save\", data, { params: query });\r\n    }\r\n    static saveAddOnProduct(data, query) {\r\n        return axios.post(this.baseURL + \"save-addon\", data, { params: query });\r\n    }\r\n    static detailUser(id, data) {\r\n        return axios.get(this.baseURL + 'details/' + id, { params: data });\r\n    }\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + 'list', { params: data });\r\n    }\r\n    static saveUser(data, query) {\r\n        return axios.post(this.baseURL + \"save\", data, { params: query });\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + 'delete', { ids: id });\r\n    }\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Input } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport util from '../../../utils/util';\r\nimport service from '../../../services/product';\r\n\r\n\r\nexport default function Cart({ userId }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, userId });\r\n    const addNewModalRef = useRef();\r\n    const addNewLabelRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Product Name',\r\n            dataIndex: 'name',\r\n\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.listProduct(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.deleteJob(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !userId\r\n                    ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title>\r\n                    : null\r\n            }\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, userId }} />\r\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected datas?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, userId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            console.log('dt', dt);\r\n            setData(\r\n                dt\r\n                    ? { ...dt }\r\n                    : { userId }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveJob(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || '') });\r\n        }\r\n    }, [data.name]);\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"City\" required>\r\n                                    <Input placeholder=\"City\" value={data.city} onChange={e => { handleChange({ city: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Pin\" required>\r\n                                    <Input placeholder=\"Pin\" value={data.pin} onChange={e => { handleChange({ pin: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"State\" required>\r\n                                    <Input placeholder=\"State\" value={data.state} onChange={e => { handleChange({ state: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Street 1\" required>\r\n                                    <Input placeholder=\"Street 1\" value={data.street1} onChange={e => { handleChange({ street1: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Street 2\" required>\r\n                                    <Input placeholder=\"Street 2\" value={data.street2} onChange={e => { handleChange({ street2: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst AddLabel = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add User' : 'List of Varient')}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n            >\r\n                <Cart productId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport UserService from '../../../services/userMange';\r\nimport UploadImage from '../../../utils/UploadImage';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport Address from './Address';\r\nimport Cart from './Cart';\r\n\r\n\r\nexport default function UserManagement({ userId }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, userId });\r\n    const addNewModalRef = useRef();\r\n    const ModelModalRef = useRef();\r\n    const ModelModalCartRef = useRef()\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Username',\r\n            dataIndex: 'name',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Phone',\r\n            dataIndex: 'phone',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            width: 200,\r\n        },\r\n        {\r\n            title: 'Job',\r\n            dataIndex: '_id',\r\n            width: 80,\r\n            render: (v, row) => <Button type=\"primary\" size='small' onClick={() => { ModelModalRef.current.openForm({ _id: row._id, name: row.name }) }} >Address</Button>\r\n        },\r\n        {\r\n            title: 'Cart',\r\n            dataIndex: '_id',\r\n            width: 80,\r\n            render: (v, row) => <Button type=\"primary\" size='small' onClick={() => { ModelModalCartRef.current.openForm({ _id: row._id, name: row.name }) }} >Cart</Button>\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: status => {\r\n                if (status === \"blocked\") {\r\n                    return <Tag color='red'>Blocked</Tag>\r\n                } else if (status === \"active\") {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color=\"yellow\">Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this User?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        UserService.listUser(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        UserService.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            {!userId ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title> : null}\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, userId }} />\r\n            <ModelModal ref={ModelModalRef} />\r\n            <ModelModal1 ref={ModelModalCartRef} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col xs={24} xl={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col xs={24} xl={4}>\r\n                    <Form.Item>\r\n                        <Select value={qData.status} allowClear placeholder=\"Search By Status\" onChange={e => { setQData({ ...qData, status: e }) }} >\r\n                            <Select.Option value=\"active\">Active</Select.Option>\r\n                            <Select.Option value=\"inactive\">Inactive</Select.Option>\r\n                            <Select.Option value=\"blocked\">Blocked</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, userId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { userId }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        UserService.detailUser(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.avatar ? [res.data?.avatar] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        UserService.saveUser(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ avatar: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={800}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={20}>\r\n                                <Row gutter={[12, 2]}>\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Username\" required>\r\n                                            <Input placeholder=\"John Doe\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Email\" required>\r\n                                            <Input placeholder=\"Email\" value={data.email} onChange={e => { handleChange({ email: e.target.value }) }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Phone\" required>\r\n                                            <Input placeholder=\"Phone\" value={data.phone} onChange={e => { handleChange({ phone: e.target.value }) }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col span={4}>\r\n                                <Form.Item label=\"Avatar\">\r\n                                    <UploadImage {...{ fileList, setFileList }} count={1} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={10}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value=\"active\">Active</Select.Option>\r\n                                        <Select.Option value=\"inactive\">Inactive</Select.Option>\r\n                                        <Select.Option value=\"blocked\">Blocked</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst ModelModal = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt ? { ...dt } : { status: true });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={<>All Job List <Typography.Text type=\"danger\">{data?.name}</Typography.Text></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1600}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                ]}\r\n            >\r\n                <Address userId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst ModelModal1 = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt ? { ...dt } : { status: true });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={<>All Product List of <Typography.Text type=\"danger\">{data?.name}</Typography.Text></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1600}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                ]}\r\n            >\r\n                <Cart userId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag, Divider, message } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport service from '../../../services/product';\r\nimport util from '../../../utils/util';\r\nimport Varient from './Varient';\r\nimport UploadImage from '../../../utils/UploadImage';\r\nimport categoryService from '../../../services/category';\r\n\r\nexport default function Product({ parentId }) {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [category, setCategory] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, parentId,type:'product' });\r\n    const addNewModalRef = useRef();\r\n    const addNewLabelRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Description',\r\n            dataIndex: 'description',\r\n            width: 400,\r\n            render: (v) => <Typography.Text ellipsis={{ expandable: true }}>{v}</Typography.Text>,\r\n        },\r\n        {\r\n            title: 'Meta-Title',\r\n            dataIndex: 'metaTitle',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Meta-Tag',\r\n            dataIndex: 'metaTag',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Meta-Description',\r\n            dataIndex: 'metaDescription',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n    function list() {\r\n        setLoading(true);\r\n        service.listUser(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    function listCategory() {\r\n        categoryService.list()\r\n            .then(res => { setCategory(res.data || []); }).catch(err => { AntdMsg('Product data not loaded', 'error'); });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n    useEffect(() => {\r\n        list();\r\n        listCategory();\r\n    }, [qData.page, qData.limit]);\r\n    return (\r\n        <>\r\n            {!parentId ? <Typography.Title level={5} style={{ marginTop: 0 }}>Product List</Typography.Title> : null}\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, parentId, category }} />\r\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col xs={24} xl={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data ?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, parentId, category } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [thumbFile, setThumbFile] = useState([]);\r\n    const [file, setFile] = useState([]);\r\n\r\n\r\n    const handleChange = (v, k) => {\r\n        let varDt = data;\r\n        let keys = k.split('.');\r\n        for (let i = 0; i < keys.length; i++) {\r\n            if (i + 1 === keys.length) {\r\n                varDt[keys[i]] = v;\r\n            } else {\r\n                if (typeof varDt[keys[i]] === 'undefined') {\r\n                    if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                        varDt[keys[i]] = [];\r\n                    } else {\r\n                        varDt[keys[i]] = {};\r\n                    }\r\n                } varDt = varDt[keys[i]];\r\n            }\r\n        }\r\n        setData({ ...data, ...v });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { ...dt }\r\n                    : { parentId, isPremium: false, isBestSelling: false, forBirthday: false, forAnniversary: false, isBestSellingCombos: false, variants: [{}] }\r\n            );\r\n        }\r\n    }));\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailUser(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFile(res.data.imgs.length ? [...res.data.imgs] : [])\r\n            setThumbFile(res.data.thumbImg ? [res.data.thumbImg] : [])\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveUser(data).then((res) => {\r\n            // AntdMsg(res.message);\r\n            message.success(res.message)\r\n            // handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                // AntdMsg(dt, 'error');\r\n                message.error(dt);\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange(util.removeSpecialChars(data.name || \"\"), 'slug');\r\n        }\r\n    }, [data.name]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange(util.removeSpecialChars(data?.name || ''), 'slug');\r\n        }\r\n    }, [data.name]);\r\n\r\n    useEffect(() => {\r\n        setData({ ...data, thumbImg: thumbFile[0] })\r\n    }, [thumbFile])\r\n\r\n    useEffect(() => {\r\n        setData({ ...data, imgs: file })\r\n    }, [file])\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({})\r\n        }\r\n    }, [open])\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add New' : 'Edit') + ' Product'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1000}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange(e.target.value, \"name\") }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange(util.removeSpecialChars(e.target.value), \"slug\") }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Description\" required>\r\n                                    <Input.TextArea rows={4} placeholder=\"Description\" value={data.description} onChange={e => { handleChange(util.removeSpecialChars(e.target.value), \"description\") }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Meta-Title\" required>\r\n                                    <Input placeholder=\"Meta-Title\" value={data.metaTitle} onChange={e => { handleChange(e.target.value, \"metaTitle\") }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Category\" required>\r\n                                    <Select mode=\"multiple\" value={data.categoryIds} onChange={v => { handleChange(v, \"categoryIds\") }}\r\n                                        options={\r\n                                            category.map(v => (\r\n                                                {\r\n                                                    value: v._id,\r\n                                                    label: v.name,\r\n                                                }\r\n                                            ))\r\n                                        } >\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Meta-Tag\" required>\r\n                                    <Input placeholder=\"Meta-Tag\" value={data.metaTag} onChange={e => { handleChange(e.target.value, \"metaTag\") }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Meta-Description\" required>\r\n                                    <Input.TextArea rows={4} placeholder=\"Meta-Description\" value={data.metaDescription} onChange={e => { handleChange(e.target.value, \"metaDescription\") }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"High-Light\" required>\r\n                                    <Input.TextArea rows={4} placeholder=\"High-Light...\" value={data.heighlight} onChange={e => { handleChange(e.target.value, \"heighlight\") }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Premium\" required>\r\n                                    <Select value={data.isPremium} onChange={e => { handleChange(e, \"isPremium\") }} >\r\n                                        <Select.Option value={true}>Yes</Select.Option>\r\n                                        <Select.Option value={false}>No</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Best Selling\" required>\r\n                                    <Select value={data.isBestSelling} onChange={e => { handleChange(e, \"isBestSelling\") }} >\r\n                                        <Select.Option value={true}>Yes</Select.Option>\r\n                                        <Select.Option value={false}>No</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Best Selling Combos\" required>\r\n                                    <Select value={data.isBestSellingCombos} onChange={e => { handleChange(e, \"isBestSellingCombos\") }} >\r\n                                        <Select.Option value={true}>Yes</Select.Option>\r\n                                        <Select.Option value={false}>No</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"BirthDay\" required>\r\n                                    <Select value={data.forBirthday} onChange={e => { handleChange(e, \"forBirthday\") }} >\r\n                                        <Select.Option value={true}>Yes</Select.Option>\r\n                                        <Select.Option value={false}>No</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Anniversary\" required>\r\n                                    <Select value={data.forAnniversary} onChange={e => { handleChange(e, \"forAnniversary\") }} >\r\n                                        <Select.Option value={true}>Yes</Select.Option>\r\n                                        <Select.Option value={false}>No</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange(e, \"status\") }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Variant {...{ variantDetails: data.variants, parentKay: 'variants', handleChange }} />\r\n                            </Col>\r\n                            <Divider />\r\n                            <br />\r\n                            <Col span={4}>\r\n                                <Form.Item label=\"Thumbnail Photo\">\r\n                                    <UploadImage {...{ fileList: thumbFile, setFileList: setThumbFile }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={20}>\r\n                                <Form.Item label=\"Photo\">\r\n                                    <UploadImage {...{ fileList: file, setFileList: setFile, count: 20 }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst AddLabel = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? `Add User of ${(data.name)}` : `Variants of ${(data.name)}`)}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n            >\r\n                <Varient productId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\nfunction Variant({ variantDetails: data, parentKay, handleChange }) {\r\n    useEffect(() => {\r\n        console.log(parentKay, parentKay === 'variants');\r\n    }, [parentKay])\r\n    return (\r\n        <>\r\n            <div><Divider orientation=\"left\">{parentKay === 'variants' ? \"Variants\" : \"Variant\"}</Divider></div>\r\n            <Row>\r\n                <Col span={4}>\r\n                    <label className=\"req\">Weight</label>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <label className=\"req\">Price</label>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <label className=\"req\">Actual Price (In ₹)</label>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                data?.map((v, i) => (\r\n                    <React.Fragment key={i}>\r\n                        <Row>\r\n                            <Col span={4}>\r\n                                <Input placeholder=\"Weight\" value={v.weight} onChange={(e) => { handleChange((e.target.value), `${parentKay}.${i}.weight`) }} />\r\n                            </Col>\r\n                            <Col span={4}>\r\n                                <Input placeholder=\"Price\" value={v.price} onChange={(e) => { handleChange(util.handleInteger(e.target.value), `${parentKay}.${i}.price`) }} />\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Input placeholder=\"Actual Price\" value={v.actualPrice} onChange={(e) => { handleChange(util.handleFloat(e.target.value), `${parentKay}.${i}.actualPrice`) }} />\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                {\r\n                                    i + 1 === data.length\r\n                                        ? <Button type=\"dashed\" onClick={() => {\r\n                                            handleChange([...data, {}], parentKay);\r\n                                        }}>Add</Button>\r\n                                        : null\r\n                                }\r\n                                {\r\n                                    i + 1 === data.length && i !== 0\r\n                                        ? <Button type=\"dashed\" className=\"mx-2\" danger onClick={() => {\r\n                                            data.pop();\r\n                                            handleChange([...data], parentKay);\r\n                                        }}>Remove</Button>\r\n                                        : null\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                    </React.Fragment>\r\n                ))\r\n            }\r\n        </>\r\n    );\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'offer';\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n    static details(id) {\r\n        return axios.get(this.baseURL + '/details/' + id);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, DatePicker } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../services/offer';\r\nimport ProductService from '../../services/product';\r\nimport UserService from '../../services/userList';\r\nimport Pagination from '../components/Pagination';\r\nimport UploadImage from '../../utils/UploadImage';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport dayjs from 'dayjs';\r\nimport moment from 'moment';\r\nimport util from '../../utils/util';\r\n\r\n\r\nexport default function Offer() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, });\r\n    const [product, setProduct] = useState([]);\r\n    const [user, setUser] = useState([]);\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 30,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Title',\r\n            dataIndex: 'title',\r\n            width: 150\r\n        },\r\n        {\r\n            title: 'Discount Percent',\r\n            dataIndex: 'discountPercent',\r\n            width: 100\r\n        },\r\n        {\r\n            title: 'Max Discount',\r\n            dataIndex: 'maxDiscountValue',\r\n            width: 100\r\n        },\r\n        {\r\n            title: 'Min Order Price',\r\n            dataIndex: 'minimunOrderPrice',\r\n            width: 100\r\n        },\r\n        {\r\n            title: 'Duration',\r\n            dataIndex: 'startDate',\r\n            width: 200,\r\n            render: (v, row) => <span>{moment(v).format('DD MMM YYYY')} To {moment(row.endDate).format('DD MMM YYYY')} </span>\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this User?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ key: v._id, ...v })).reverse());\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    function listProduct() {\r\n        ProductService.listUser()\r\n            .then(res => { setProduct(res.data || []); }).catch(err => { AntdMsg('Product data not loaded', 'error'); });\r\n    }\r\n    function listUser() {\r\n        UserService.listUser()\r\n            .then(res => { setUser(res.data || []); }).catch(err => { AntdMsg('User data not loaded', 'error'); });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n        listProduct()\r\n        listUser()\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Offer</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, product, user }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col xs={24} xl={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by title\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, product, } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [file, setFile] = useState([]);\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.details(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFile(res.data.imgs.length ? [...res.data.imgs] : [])\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.title) });\r\n        }\r\n    }, [data.title]);\r\n\r\n    useEffect(() => {\r\n        setData({ ...data, imgs: file })\r\n    }, [file])\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Offer'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Title\" required>\r\n                                    <Input placeholder=\"Title\" value={data.title} onChange={e => { handleChange({ title: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Discount Percent\" required>\r\n                                    <Input placeholder=\"Discount Percent\" value={data.discountPercent} onChange={e => { handleChange({ discountPercent: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Max Discount Value\" required>\r\n                                    <Input placeholder=\"Max Discount Amount\" value={data.maxDiscountValue} onChange={e => { handleChange({ maxDiscountValue: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Minimun Order Value\" required>\r\n                                    <Input placeholder=\" Minimun Order Amount\" value={data.minimunOrderPrice} onChange={e => { handleChange({ minimunOrderPrice: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Product\" required>\r\n                                    <Select mode=\"multiple\" value={data.productIds} onChange={v => { handleChange({ productIds: v }) }}\r\n                                        options={\r\n                                            product.map(v => (\r\n                                                {\r\n                                                    value: v._id,\r\n                                                    label: v.name,\r\n                                                }\r\n                                            ))\r\n                                        } >\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Duration\" required>\r\n                                    <DatePicker.RangePicker\r\n                                        format='DD MMM YYYY'\r\n                                        value={data.startDate && data.endDate && [dayjs(data.startDate), dayjs(data.endDate)]}\r\n                                        onChange={(e) => { handleChange({ startDate: e?.[0] ? new Date(e?.[0]) : null, endDate: e?.[1] ? new Date(e?.[1]) : null }) }}\r\n                                        style={{ width: '100%' }}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={20}>\r\n                                <Form.Item label=\"Photo\">\r\n                                    <UploadImage  {...{ fileList: file, setFileList: setFile }} count={1} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag, Divider } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport service from '../../../services/product';\r\nimport util from '../../../utils/util';\r\nimport Varient from './Varient';\r\nimport UploadImage from '../../../utils/UploadImage';\r\nimport categoryService from '../../../services/category';\r\n\r\nexport default function AddOn({ parentId }) {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [category, setCategory] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, parentId,type:'addOn' });\r\n    const addNewModalRef = useRef();\r\n    const addNewLabelRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Description',\r\n            dataIndex: 'description',\r\n            width: 400,\r\n            render: (v) => <Typography.Text ellipsis={{ expandable: true }}>{v}</Typography.Text>,\r\n        },\r\n        {\r\n            title:'Type',\r\n            dataIndex:'type',\r\n            render: type => {\r\n                    return <Tag color='blue'>AddOn</Tag>\r\n                }\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n    function list() {\r\n        setLoading(true);\r\n        service.listUser(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    function listCategory() {\r\n        categoryService.list()\r\n            .then(res => { setCategory(res.data || []); }).catch(err => { AntdMsg('Product data not loaded', 'error'); });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n    useEffect(() => {\r\n        list();\r\n        listCategory();\r\n    }, [qData.page, qData.limit]);\r\n    return (\r\n        <>\r\n            {!parentId ? <Typography.Title level={5} style={{ marginTop: 0 }}>Product List</Typography.Title> : null}\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, parentId, category }} />\r\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col xs={24} xl={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data ?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, parentId, category } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [thumbFile, setThumbFile] = useState([]);\r\n    const [file, setFile] = useState([]);\r\n\r\n\r\n    const handleChange = (v, k) => {\r\n        let varDt = data;\r\n        let keys = k.split('.');\r\n        for (let i = 0; i < keys.length; i++) {\r\n            if (i + 1 === keys.length) {\r\n                varDt[keys[i]] = v;\r\n            } else {\r\n                if (typeof varDt[keys[i]] === 'undefined') {\r\n                    if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                        varDt[keys[i]] = [];\r\n                    } else {\r\n                        varDt[keys[i]] = {};\r\n                    }\r\n                } varDt = varDt[keys[i]];\r\n            }\r\n        }\r\n        setData({ ...data });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { parentId, isPremium: false, isBestSelling: false, forBirthday: false, forAnniversary: false, isBestSellingCombos: false, variants: [{}] }\r\n            );\r\n        }\r\n    }));\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailUser(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFile(res.data.imgs.length ? [...res.data.imgs] : [])\r\n            setThumbFile(res.data.thumbImg ? [res.data.thumbImg] : [])\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveAddOnProduct(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange(util.removeSpecialChars(data.name || \"\"), 'slug');\r\n        }\r\n    }, [data.name]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange(util.removeSpecialChars(data?.name || ''), 'slug');\r\n        }\r\n    }, [data.name]);\r\n\r\n    useEffect(() => {\r\n        setData({ ...data, thumbImg: thumbFile[0] })\r\n    }, [thumbFile])\r\n\r\n    useEffect(() => {\r\n        setData({ ...data, imgs: file })\r\n    }, [file])\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({})\r\n        }\r\n    }, [open])\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add New' : 'Edit') + ' AddOn Product'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1000}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange(e.target.value, \"name\") }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange(util.removeSpecialChars(e.target.value), \"slug\") }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Description\" required>\r\n                                    <Input.TextArea rows={4} placeholder=\"Description\" value={data.description} onChange={e => { handleChange(util.removeSpecialChars(e.target.value), \"description\") }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Type\" required>\r\n                                    <Select value={data.type} onChange={e => { handleChange(e, \"type\") }} >\r\n                                        <Select.Option value={'addOn'}>AddOn</Select.Option>\r\n                                        <Select.Option value={'product'}>Product</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange(e, \"status\") }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n\r\n                                <Variant {...{ variantDetails: data.variants, parentKay: 'variants', handleChange }} />\r\n                            </Col>\r\n                            <Divider />\r\n                            <br />\r\n                            <Col span={4}>\r\n                                <Form.Item label=\"Thumbnail Photo\">\r\n                                    <UploadImage {...{ fileList: thumbFile, setFileList: setThumbFile }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={20}>\r\n                                <Form.Item label=\"Photo\">\r\n                                    <UploadImage {...{ fileList: file, setFileList: setFile, count: 20 }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst AddLabel = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? `Add User of ${(data.name)}` : `Variants of ${(data.name)}`)}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n            >\r\n                <Varient productId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\nfunction Variant({ variantDetails: data, parentKay, handleChange }) {\r\n    useEffect(() => {\r\n        console.log(parentKay, parentKay === 'variants');\r\n    }, [parentKay])\r\n    return (\r\n        <>\r\n            <div><Divider orientation=\"left\">{parentKay === 'variants' ? \"Variants\" : \"Variant\"}</Divider></div>\r\n            <Row>\r\n                <Col span={4}>\r\n                    <label className=\"req\">Weight</label>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <label className=\"req\">Price</label>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <label className=\"req\">Actual Price (In ₹)</label>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                data?.map((v, i) => (\r\n                    <React.Fragment key={i}>\r\n                        <Row>\r\n                            <Col span={4}>\r\n                                <Input placeholder=\"Weight\" value={v.weight} onChange={(e) => { handleChange((e.target.value), `${parentKay}.${i}.weight`) }} />\r\n                            </Col>\r\n                            <Col span={4}>\r\n                                <Input placeholder=\"Price\" value={v.price} onChange={(e) => { handleChange(util.handleInteger(e.target.value), `${parentKay}.${i}.price`) }} />\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Input placeholder=\"Actual Price\" value={v.actualPrice} onChange={(e) => { handleChange(util.handleFloat(e.target.value), `${parentKay}.${i}.actualPrice`) }} />\r\n                            </Col>\r\n                        </Row>\r\n                    </React.Fragment>\r\n                ))\r\n            }\r\n        </>\r\n    );\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'homepageitems';\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n    static details(id) {\r\n        return axios.get(this.baseURL + '/details/' + id);\r\n    }\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {\r\n  Table,\r\n  Button,\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Popconfirm,\r\n  Modal,\r\n  Spin,\r\n  Typography,\r\n  Select,\r\n  Input,\r\n  Tag,\r\n  Image,\r\n} from \"antd\";\r\nimport {\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  LoadingOutlined,\r\n  PlusOutlined,\r\n} from \"@ant-design/icons\";\r\nimport React, {\r\n  useEffect,\r\n  useState,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  useRef,\r\n} from \"react\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport { AntdMsg } from \"../../utils/Antd\";\r\nimport service from \"../../services/homepageItems\";\r\nimport serviceProduct from \"../../services/product\";\r\nimport offerService from \"../../services/offer\";\r\nimport categoryService from \"../../services/category\";\r\nimport bannerService from \"../../services/banner\";\r\nimport util from \"../../utils/util\";\r\n\r\nexport default function Product() {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [selected, setSelected] = useState([]);\r\n  const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n  const addNewModalRef = useRef();\r\n  const [allProduct, setAllProduct] = useState([]);\r\n  const [allCategories, setAllCategories] = useState([]);\r\n  const [allOffers, setAllOffers] = useState([]);\r\n  const [allBanners, setAllBanners] = useState([]);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"#\",\r\n      width: 40,\r\n      render: (v, row, i) => <b>{i + 1}</b>,\r\n    },\r\n    {\r\n      title: \"Product \",\r\n      dataIndex: \"productDetails\",\r\n      render: (v) => v.map((vv) => <Tag>{vv.name}</Tag>),\r\n    },\r\n    {\r\n      title: \"Categories \",\r\n      dataIndex: \"categoryDetails\",\r\n      render: (v) => v.map((vv) => <Tag>{vv.name}</Tag>),\r\n    },\r\n    {\r\n      title: \"Banners \",\r\n      dataIndex: \"bannerDetails\",\r\n      render: v => v.map(vv => <Image src={vv?.imgUrl} height={80} />)\r\n    },\r\n    {\r\n      title: \"Offer \",\r\n      dataIndex: \"offerDetails\",\r\n      render: (v) => v.map((vv) => <Tag>{vv.title}</Tag>),\r\n    },\r\n    {\r\n      title: \"Display Order\",\r\n      dataIndex: \"displayOrder\",\r\n      width: 250,\r\n    },\r\n    {\r\n      title: \"Display Type\",\r\n      dataIndex: \"displayType\",\r\n      width: 250,\r\n    },\r\n    {\r\n      title: \"Slug\",\r\n      dataIndex: \"slug\",\r\n      width: 150,\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"_id\",\r\n      width: 70,\r\n      render: (v, row) => {\r\n        return (\r\n          <>\r\n            <Popconfirm\r\n              title=\"Are you sure to delete this data?\"\r\n              onConfirm={() => {\r\n                deleteData(row._id);\r\n              }}\r\n              okText=\"Yes\"\r\n              cancelText=\"No\"\r\n            >\r\n              <Button\r\n                type=\"primary\"\r\n                size=\"small\"\r\n                danger\r\n                icon={<DeleteOutlined />}\r\n              />\r\n              &nbsp;\r\n            </Popconfirm>\r\n            <Button\r\n              type=\"primary\"\r\n              size=\"small\"\r\n              icon={<EditOutlined />}\r\n              onClick={() => {\r\n                addNewModalRef.current.openForm(row);\r\n              }}\r\n            />\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ].filter((item) => !item.hidden);\r\n  function list() {\r\n    setLoading(true);\r\n    service\r\n      .list(qData)\r\n      .then((res) => {\r\n        setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n        setQData({\r\n          ...qData,\r\n          limit: res.extra.limit,\r\n          page: res.extra.page,\r\n          total: res.extra.total,\r\n        });\r\n      })\r\n      .catch((err) => {})\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    list();\r\n  }, []);\r\n  const deleteData = (id) => {\r\n    service\r\n      .delete(id)\r\n      .then((res) => {\r\n        AntdMsg(res.message);\r\n        list();\r\n        setSelected([]);\r\n      })\r\n      .catch((err) => {\r\n        AntdMsg(err.message, \"error\");\r\n      });\r\n  };\r\n  const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n  tableColumns[0].fixed = true;\r\n  tableColumns[tableColumns.length - 1].fixed = \"right\";\r\n  const tableProps = {\r\n    bordered: true,\r\n    loading,\r\n    size: \"small\",\r\n    title: () => (\r\n      <Search\r\n        {...{ addNewModalRef, selected, deleteData, qData, setQData, list }}\r\n      />\r\n    ),\r\n    showHeader: true,\r\n    footer: () => <Pagination {...{ qData, setQData }} />,\r\n    rowSelection: {\r\n      onChange: (selectedRowKeys) => {\r\n        setSelected(selectedRowKeys);\r\n      },\r\n    },\r\n    tableLayout: undefined,\r\n  };\r\n  useEffect(() => {\r\n    serviceProduct.listUser({ isAll: 1 }).then((res) => {\r\n      setAllProduct(\r\n        res.data.map((v) => ({ ...v, label: v.name, value: v._id }))\r\n      );\r\n    });\r\n    offerService.list({ isAll: 1 }).then((res) => {\r\n      setAllOffers(\r\n        res.data.map((v) => ({ ...v, label: v.title, value: v._id }))\r\n      );\r\n    });\r\n    categoryService.list({ isAll: 1 }).then((res) => {\r\n      setAllCategories(\r\n        res.data.map((v) => ({ ...v, label: v.name, value: v._id }))\r\n      );\r\n    });\r\n    bannerService.bannerList({ isAll: 1 }).then((res) => {\r\n      setAllBanners(\r\n        res.data.map((v) => ({ ...v, label: v.name, value: v._id }))\r\n      );\r\n    });\r\n  }, [qData.page, qData.limit]);\r\n  return (\r\n    <>\r\n      <Typography.Title level={5} style={{ marginTop: 0 }}>\r\n        Product List\r\n      </Typography.Title>\r\n      <Table\r\n        {...tableProps}\r\n        pagination={{ position: [\"none\"], pageSize: qData.limit }}\r\n        columns={tableColumns}\r\n        dataSource={data.length ? data : []}\r\n        scroll={{ y: \"calc(100vh - 340px)\", x: \"calc(100vw - 387px)\" }}\r\n      />\r\n      <AddForm\r\n        ref={addNewModalRef}\r\n        {...{ list, allProduct, allBanners, allCategories, allOffers }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Search({\r\n  addNewModalRef,\r\n  selected,\r\n  deleteData,\r\n  qData,\r\n  setQData,\r\n  list,\r\n}) {\r\n  return (\r\n    <Form onSubmitCapture={list} className=\"search-form\">\r\n      <Row gutter={[12, 2]}>\r\n        <Col span={4}>\r\n          <Form.Item style={{ marginBottom: 0 }}>\r\n            <Input\r\n              placeholder=\"Search by name or code\"\r\n              value={qData.key}\r\n              onChange={(e) => setQData({ ...qData, key: e.target.value })}\r\n              allowClear\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={3}>\r\n          <Form.Item style={{ marginBottom: 0 }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Search\r\n            </Button>\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={5}>\r\n          <Form.Item style={{ marginBottom: 0, float: \"right\" }}>\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<PlusOutlined />}\r\n              onClick={() => {\r\n                addNewModalRef.current.openForm();\r\n              }}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Form.Item>\r\n          {selected.length ? (\r\n            <Popconfirm\r\n              title=\"Are you sure to delete these selected data ?\"\r\n              onConfirm={() => {\r\n                deleteData(selected);\r\n              }}\r\n              okText=\"Yes\"\r\n              cancelText=\"No\"\r\n            >\r\n              <Button\r\n                type=\"primary\"\r\n                danger\r\n                style={{ float: \"right\" }}\r\n                icon={<DeleteOutlined />}\r\n              >\r\n                Delete Selected\r\n              </Button>\r\n            </Popconfirm>\r\n          ) : null}\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n}\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n  const { list, allProduct, allBanners, allCategories, allOffers } = props;\r\n  const [open, setOpen] = useState(false);\r\n  const [data, setData] = useState({ aspect: 1 });\r\n  const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n  const handleChange = (v, k) => {\r\n    let varDt = data;\r\n    let keys = k.split(\".\");\r\n    for (let i = 0; i < keys.length; i++) {\r\n      if (i + 1 === keys.length) {\r\n        varDt[keys[i]] = v;\r\n      } else {\r\n        if (typeof varDt[keys[i]] === \"undefined\") {\r\n          if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n            varDt[keys[i]] = [];\r\n          } else {\r\n            varDt[keys[i]] = {};\r\n          }\r\n        }\r\n        varDt = varDt[keys[i]];\r\n      }\r\n    }\r\n    setData({ ...data });\r\n  };\r\n  useImperativeHandle(ref, () => ({\r\n    openForm(dt) {\r\n      setOpen(true);\r\n      setData(dt ? { ...dt } : {});\r\n    },\r\n  }));\r\n\r\n  const save = () => {\r\n    setAjxRequesting(true);\r\n    service\r\n      .save(data)\r\n      .then((res) => {\r\n        AntdMsg(res.message);\r\n        handleChange({ ...res.data });\r\n        list();\r\n        setOpen(false);\r\n      })\r\n      .catch((err) => {\r\n        if (typeof err.message === \"object\") {\r\n          let dt = err.message[Object.keys(err.message)[0]];\r\n          AntdMsg(dt, \"error\");\r\n        } else {\r\n          AntdMsg(err.message, \"error\");\r\n        }\r\n      })\r\n      .finally(() => {\r\n        setAjxRequesting(false);\r\n      });\r\n  };\r\n\r\n  const getDetails = () => {\r\n    setAjxRequesting(true);\r\n    service\r\n      .details(data._id)\r\n      .then((res) => {\r\n        setData(res.data || {});\r\n      })\r\n      .catch((err) => {\r\n        AntdMsg(err.message, \"error\");\r\n      })\r\n      .finally(() => {\r\n        setAjxRequesting(false);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (data._id) {\r\n      getDetails();\r\n    }\r\n  }, [data._id]);\r\n  useEffect(() => {\r\n    if (!data._id) {\r\n      handleChange(util.removeSpecialChars(data.slug || \"\"), \"slug\");\r\n    }\r\n  }, [data.slug]);\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setData({});\r\n    }\r\n  }, [open]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={(!data._id ? \"Add New\" : \"Edit\") + \" Product\"}\r\n        style={{ top: 20 }}\r\n        open={open}\r\n        okText=\"Save\"\r\n        onOk={save}\r\n        okButtonProps={{ disabled: ajxRequesting }}\r\n        onCancel={() => {\r\n          setOpen(false);\r\n        }}\r\n        destroyOnClose\r\n        maskClosable={false}\r\n        width={1000}\r\n        className=\"app-modal-body\"\r\n        footer={[\r\n          <Button\r\n            key=\"cancel\"\r\n            onClick={() => {\r\n              setOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>,\r\n          <Button key=\"save\" type=\"primary\" onClick={save}>\r\n            Save\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Spin\r\n          spinning={ajxRequesting}\r\n          indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}\r\n        >\r\n          <Form layout=\"vertical\">\r\n            <Row gutter={[12, 2]}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Type\" required>\r\n                  <Select\r\n                    value={data.type}\r\n                    onChange={(e) => {\r\n                      handleChange(e, \"type\");\r\n                    }}\r\n                  >\r\n                    <Select.Option value=\"category\">Category</Select.Option>\r\n                    <Select.Option value=\"banner\">Banner</Select.Option>\r\n                    <Select.Option value=\"offer\">Offer</Select.Option>\r\n                    <Select.Option value=\"products\">Products</Select.Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n\r\n              {data.type === \"products\" && (\r\n                <Col span={24}>\r\n                  <Form.Item label=\"Choose Product\" required>\r\n                    <Select\r\n                      mode=\"multiple\"\r\n                      placeholder=\"Choose Products\"\r\n                      onChange={(v) => {\r\n                        handleChange(v, \"productIds\");\r\n                      }}\r\n                      optionLabelProp=\"label\"\r\n                      allowClear={true}\r\n                      value={data.productIds}\r\n                      options={allProduct.filter((v) => {\r\n                        return true;\r\n                      })}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n              )}\r\n              {data.type === \"banner\" && (\r\n                <Col span={24}>\r\n                  <Form.Item label=\"Choose Banners\" required>\r\n                    <Select\r\n                      mode=\"multiple\"\r\n                      placeholder=\"Choose Banners\"\r\n                      onChange={(v) => {\r\n                        handleChange(v, \"bannerIds\");\r\n                      }}\r\n                      optionLabelProp=\"label\"\r\n                      allowClear={true}\r\n                      value={data.bannerIds}\r\n                      options={allBanners.filter((v) => {\r\n                        return true;\r\n                      })}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n              )}\r\n              {data.type === \"category\" && (\r\n                <Col span={24}>\r\n                  <Form.Item label=\"Choose Categories\" required>\r\n                    <Select\r\n                      mode=\"multiple\"\r\n                      placeholder=\"Choose Categories\"\r\n                      onChange={(v) => {\r\n                        handleChange(v, \"categoryIds\");\r\n                      }}\r\n                      optionLabelProp=\"label\"\r\n                      allowClear={true}\r\n                      value={data.categoryIds}\r\n                      options={allCategories.filter((v) => {\r\n                        return true;\r\n                      })}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n              )}\r\n              {data.type === \"offer\" && (\r\n                <Col span={24}>\r\n                  <Form.Item label=\"Choose Offers\" required>\r\n                    <Select\r\n                      mode=\"multiple\"\r\n                      placeholder=\"Choose Offers\"\r\n                      onChange={(v) => {\r\n                        handleChange(v, \"offerIds\");\r\n                      }}\r\n                      optionLabelProp=\"label\"\r\n                      allowClear={true}\r\n                      value={data.offerIds}\r\n                      options={allOffers.filter((v) => {\r\n                        return true;\r\n                      })}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n              )}\r\n              <Col span={12}>\r\n                <Form.Item label=\"Title\">\r\n                  <Input\r\n                    placeholder=\"title\"\r\n                    value={data.title}\r\n                    onChange={(e) => {\r\n                      handleChange(e.target.value, \"title\");\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Slug\" required>\r\n                  <Input\r\n                    placeholder=\"slug\"\r\n                    value={data.slug}\r\n                    onChange={(e) => {\r\n                      handleChange(\r\n                        util.removeSpecialChars(e.target.value),\r\n                        \"slug\"\r\n                      );\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Display Order\" required>\r\n                  <Input\r\n                    placeholder=\"1\"\r\n                    type=\"number\"\r\n                    value={data.displayOrder}\r\n                    onChange={(e) => {\r\n                      handleChange(e.target.value, \"displayOrder\");\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Display Type\" required>\r\n                  <Select\r\n                    value={data.displayType}\r\n                    onChange={(e) => {\r\n                      handleChange(e, \"displayType\");\r\n                    }}\r\n                  >\r\n                    <Select.Option value=\"grid\">Grid</Select.Option>\r\n                    <Select.Option value=\"scroll\">Scroll</Select.Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Spin>\r\n      </Modal>\r\n    </>\r\n  );\r\n});\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = '';\r\n\r\n    static list(data) {\r\n        return axios.get(\"order/list\", { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(\"order/save\", data, { params: query });\r\n    }\r\n    static delete(id) {\r\n        return axios.post('order/delete', { ids: id });\r\n    }\r\n    static details(id) {\r\n        return axios.get('order/details/' + id);\r\n    }\r\n}","import {\r\n    Table,\r\n    Button,\r\n    Form,\r\n    Input,\r\n    Row,\r\n    Col,\r\n    Popconfirm,\r\n    Modal,\r\n    Spin,\r\n} from \"antd\";\r\nimport {\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    LoadingOutlined,\r\n    EyeOutlined,\r\n} from \"@ant-design/icons\";\r\nimport React, {\r\n    useEffect,\r\n    useState,\r\n    forwardRef,\r\n    useImperativeHandle,\r\n    useRef,\r\n} from \"react\";\r\nimport service from \"../../services/orders\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport { AntdMsg } from \"../../utils/Antd\";\r\n\r\nexport default function OrderDetails({ type, orderId = null }) {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, type, orderId });\r\n    const addNewModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: \"Cat Id\",\r\n            dataIndex: \"productVariantDetails\",\r\n            width: 250,\r\n            render: (_) => _?.catId\r\n        },\r\n        {\r\n            title: \"Product Name\",\r\n            dataIndex: \"productDetails\",\r\n            width: 250,\r\n            render: (_) => {\r\n                return <span>{_?.name}</span>;\r\n            },\r\n        },\r\n        {\r\n            title: \"Price\",\r\n            dataIndex: \"productVariantDetails\",\r\n            width: 140,\r\n            render: (_) => {\r\n                return <span>₹{_?.price}</span>;\r\n            },\r\n        },\r\n        {\r\n            title: \"With Discount Price\",\r\n            dataIndex: \"productVariantDetails\",\r\n            width: 140,\r\n            render: (_) => {\r\n                return <span>₹{_?.withDiscountPrice || _?.price}</span>;\r\n            },\r\n        },\r\n        // {\r\n        //   title: \"Quantity\",\r\n        //   dataIndex: \"quantity\",\r\n        //   width: 50,\r\n        // },\r\n\r\n    ].filter((item) => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service\r\n            .orderDetailList(qData)\r\n            .then((res) => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({\r\n                    ...qData,\r\n                    limit: res.extra.limit,\r\n                    page: res.extra.page,\r\n                    total: res.extra.total,\r\n                });\r\n            })\r\n            .catch((err) => { })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service\r\n            .orderDetailDelete(id)\r\n            .then((res) => {\r\n                AntdMsg(res.message);\r\n                list();\r\n                setSelected([]);\r\n            })\r\n            .catch((err) => {\r\n                AntdMsg(err.message, \"error\");\r\n            });\r\n    };\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = \"right\";\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: \"small\",\r\n        title: () => (\r\n            <Search\r\n                {...{ addNewModalRef, selected, deleteData, qData, setQData, list }}\r\n            />\r\n        ),\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n    return (\r\n        <>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: [\"none\"], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n            // scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, type, orderId }} />\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Search({\r\n    addNewModalRef,\r\n    selected,\r\n    deleteData,\r\n    qData,\r\n    setQData,\r\n    list,\r\n}) {\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                {/* <Col span={4}>\r\n                      <Form.Item style={{ marginBottom: 0 }}>\r\n                          <Input placeholder=\"Search by name\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                      </Form.Item>\r\n                  </Col> */}\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Reload\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {selected.length ? (\r\n                        <Popconfirm\r\n                            title=\"Are you sure to delete these selected product attributes ?\"\r\n                            onConfirm={() => {\r\n                                deleteData(selected);\r\n                            }}\r\n                            okText=\"Yes\"\r\n                            cancelText=\"No\"\r\n                        >\r\n                            <Button\r\n                                type=\"primary\"\r\n                                danger\r\n                                style={{ float: \"right\" }}\r\n                                icon={<DeleteOutlined />}\r\n                            >\r\n                                Delete Selected\r\n                            </Button>\r\n                        </Popconfirm>\r\n                    ) : null}\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n}\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, orderId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [ln, setLn] = useState(\"en\");\r\n    const [changeForm, setChangeForm] = useState(false);\r\n\r\n    const handleChange = (value) => {\r\n        if (changeForm) {\r\n            Object.entries(value).forEach((ent) => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split(\".\");\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === \"undefined\") {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        }\r\n                        varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n        }\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt ? { _id: dt } : { orderId });\r\n            setChangeForm(true);\r\n        },\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service\r\n            .orderDetailDetails(data._id)\r\n            .then((res) => {\r\n                setData(res.data || {});\r\n            })\r\n            .catch((err) => {\r\n                AntdMsg(err.message, \"error\");\r\n            })\r\n            .finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n    };\r\n\r\n    const save = () => {\r\n        if (changeForm) {\r\n            setAjxRequesting(true);\r\n            service\r\n                .orderDetailSave(data, { ln })\r\n                .then((res) => {\r\n                    AntdMsg(res.message);\r\n                    handleChange({ ...res.data });\r\n                    if (ln === \"en\") {\r\n                        list();\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    if (typeof err.message === \"object\") {\r\n                        let dt = err.message[Object.keys(err.message)[0]];\r\n                        AntdMsg(dt, \"error\");\r\n                    } else {\r\n                        AntdMsg(err.message, \"error\");\r\n                    }\r\n                })\r\n                .finally(() => {\r\n                    setAjxRequesting(false);\r\n                });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [ln, data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setLn(\"en\");\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? \"Add\" : \"Edit\") + \" Order\"}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => {\r\n                    setOpen(false);\r\n                }}\r\n                // destroyOnClose\r\n                maskClosable={false}\r\n                width={900}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button\r\n                        key=\"cancel\"\r\n                        onClick={() => {\r\n                            setOpen(false);\r\n                        }}\r\n                    >\r\n                        Cancel\r\n                    </Button>,\r\n                    changeForm ? (\r\n                        <Button key=\"save\" type=\"primary\" onClick={save}>\r\n                            Save\r\n                        </Button>\r\n                    ) : null,\r\n                ]}\r\n            >\r\n                <Spin\r\n                    spinning={ajxRequesting}\r\n                    indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}\r\n                >\r\n                    <Form layout=\"vertical\" disabled={!changeForm}>\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Product Id\" required>\r\n                                    <Input placeholder=\"Value\" value={data?._id} disabled />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Product Name\" required>\r\n                                    <Input\r\n                                        placeholder=\"Value\"\r\n                                        value={data?.productId?.name}\r\n                                        disabled\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Price\" required>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder=\"Price\"\r\n                                        value={data.price}\r\n                                        onChange={(e) => {\r\n                                            handleChange({ price: e.target.value });\r\n                                        }}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Actual Price\" required>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder=\"Actual price\"\r\n                                        value={data.actualPrice}\r\n                                        disabled\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Quantity\" required>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder=\"Quantity\"\r\n                                        value={data.quantity}\r\n                                        onChange={(e) => {\r\n                                            handleChange({ quantity: e.target.value });\r\n                                        }}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Total \" required>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder=\"Total\"\r\n                                        value={data.total}\r\n                                        onChange={(e) => {\r\n                                            handleChange({ total: e.target.value });\r\n                                        }}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","\r\nimport {\r\n    Table,\r\n    Button,\r\n    Form,\r\n    Input,\r\n    Row,\r\n    Col,\r\n    Popconfirm,\r\n    Modal,\r\n    Spin,\r\n    Typography,\r\n    Select,\r\n    Tag,\r\n} from \"antd\";\r\nimport {\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    LoadingOutlined,\r\n    EyeOutlined,\r\n} from \"@ant-design/icons\";\r\nimport React, {\r\n    useEffect,\r\n    useState,\r\n    forwardRef,\r\n    useImperativeHandle,\r\n    useRef,\r\n} from \"react\";\r\nimport service from \"../../services/orders\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport { AntdMsg } from \"../../utils/Antd\";\r\nimport OrderDetails from \"./OrderDetails\";\r\n\r\nexport default function Order({ type, categoryId = null }) {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, type, categoryId });\r\n    const attributeModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: \"Order id\",\r\n            dataIndex: \"orderId\",\r\n            // width: 200,\r\n        },\r\n        {\r\n            title: \"Shipping Address\",\r\n            dataIndex: \"addressDetails\",\r\n            width: 250,\r\n            render: (_) => {\r\n                const data = JSON.parse(_);\r\n                return <span>{data.address + \" \" + data.state + \" \" + data.pin}</span>;\r\n            },\r\n        },\r\n        {\r\n            title: \"Total Amount\",\r\n            dataIndex: \"priceDetails\",\r\n            width: 140,\r\n            render: (_) => {\r\n                return <span>₹{_.finalPrice}</span>;\r\n            },\r\n        },\r\n        {\r\n            title: \"Details\",\r\n            dataIndex: \"orderId\",\r\n            width: 150,\r\n            render: (value, row) => (\r\n                <Button\r\n                    type=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={() => {\r\n                        attributeModalRef.current.openForm({ _id: row._id });\r\n                    }}\r\n                >\r\n                    Order Details\r\n                </Button>\r\n            ),\r\n        },\r\n        {\r\n            title: \"Status\",\r\n            dataIndex: \"status\",\r\n            width: 200,\r\n            render: (_, { status }) => {\r\n                return <Tag color=\"green\">{status}</Tag>;\r\n            },\r\n        },\r\n    ].filter((item) => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service\r\n            .list(qData)\r\n            .then((res) => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({\r\n                    ...qData,\r\n                    limit: res.extra.limit,\r\n                    page: res.extra.page,\r\n                    total: res.extra.total,\r\n                });\r\n            })\r\n            .catch((err) => { })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service\r\n            .delete(id)\r\n            .then((res) => {\r\n                AntdMsg(res.message);\r\n                list();\r\n                setSelected([]);\r\n            })\r\n            .catch((err) => {\r\n                AntdMsg(err.message, \"error\");\r\n            });\r\n    };\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = \"right\";\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: \"small\",\r\n        title: () => (\r\n            <Search\r\n                {...{\r\n                    selected,\r\n                    deleteData,\r\n                    qData,\r\n                    setQData,\r\n                    list,\r\n                    categoryId,\r\n                }}\r\n            />\r\n        ),\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            {!categoryId ? (\r\n                <Typography.Title level={5}>List of Orders</Typography.Title>\r\n            ) : null}\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: [\"none\"], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: \"calc(100vh - 340px)\", x: \"calc(100vw - 387px)\" }}\r\n            />\r\n            <AttributeModal ref={attributeModalRef} />\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Search({ selected, deleteData, qData, setQData, list }) {\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input\r\n                            placeholder=\"Search by order id\"\r\n                            value={qData.key}\r\n                            onChange={(e) => setQData({ ...qData, key: e.target.value })}\r\n                            allowClear\r\n                        />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Search\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {selected.length ? (\r\n                        <Popconfirm\r\n                            title=\"Are you sure to delete these selected Order?\"\r\n                            onConfirm={() => {\r\n                                deleteData(selected);\r\n                            }}\r\n                            okText=\"Yes\"\r\n                            cancelText=\"No\"\r\n                        >\r\n                            <Button\r\n                                type=\"primary\"\r\n                                danger\r\n                                style={{ float: \"right\" }}\r\n                                icon={<DeleteOutlined />}\r\n                            >\r\n                                Delete Selected\r\n                            </Button>\r\n                        </Popconfirm>\r\n                    ) : null}\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n}\r\n\r\nconst AttributeModal = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt);\r\n        },\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={\r\n                    <>\r\n                        Details of Order:{\" \"}\r\n                        <Typography.Text type=\"danger\">{data._id}</Typography.Text>\r\n                    </>\r\n                }\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => {\r\n                    setOpen(false);\r\n                }}\r\n                maskClosable={false}\r\n                width={1200}\r\n                destroyOnClose\r\n                className=\"app-modal-body-overflow\"\r\n                footer={null}\r\n            >\r\n                <OrderDetails {...{ type: data.type, orderId: data._id }} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'master';\r\n\r\n    // for Banners : \r\n    static typeDetails(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static typeList(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static typeSave(data, query) {\r\n        return axios.post(this.baseURL + \"/create\", data, { params: query });\r\n    }\r\n    static typeDelete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n}","import { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag, DatePicker, message } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../../services/type';\r\nimport Pagination from '../../components/Pagination';\r\n\r\n\r\nexport default function List({ type }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, type });\r\n    const [user, setUser] = useState([]);\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 30,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'name',\r\n            width: 150,\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: 'Type',\r\n            width: 100,\r\n            dataIndex: 'type',\r\n        },\r\n\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 60,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this User?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.typeList(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ key: v._id, ...v })).reverse());\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n\r\n    const deleteData = (id) => {\r\n        service.typeDelete(id).then(res => {\r\n            message.success(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            message.error(err.message);\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n    console.log(tableColumns)\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n\r\n    }, [qData.page, qData.limit, type]);\r\n\r\n    return (\r\n        <>\r\n            <div style={{ padding: \"0px 10px\", border1: '1px solid black' }}>\r\n                <Typography.Title level={5} style={{ marginTop: 0 }}></Typography.Title>\r\n                <Table\r\n                    {...tableProps}\r\n                    pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                    columns={tableColumns}\r\n                    dataSource={data.length ? data : []}\r\n                    scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n                />\r\n                <AddForm ref={addNewModalRef} {...{ list, user, type }} />\r\n            </div>\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n    const [data, setData] = useState([])\r\n\r\n    useEffect(() => {\r\n        service.typeList().then((res) => {\r\n            setData(res.data?.map((e) => ({ label: e.title, value: e._id })))\r\n        })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col xs={24} xl={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Select\r\n                            showSearch\r\n                            allowClear\r\n                            placeholder=\"Select an Account\"\r\n                            onChange={e => (setQData({ ...qData, _id: e, title: data[0].label }))}\r\n                            options={data}\r\n                        />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, type } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : {}\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n\r\n        setAjxRequesting(true);\r\n        service.typeDetails(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.avatar ? [res.data?.avatar] : []);\r\n        }).catch(err => {\r\n            message.error(err.message);\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        console.log(\"ddd\");\r\n        setAjxRequesting(true);\r\n        service.typeSave({ ...data, type }).then((res) => {\r\n            message.success(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                message.error(dt);\r\n            } else {\r\n                message.error(err.message);\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Coupon'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={800}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n\r\n                            <Col span={16}>\r\n                                <Form.Item label=\"Title\" required>\r\n                                    <Input placeholder=\"Title\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n","import { Tabs } from 'antd';\r\nimport { useState } from 'react';\r\nimport List from './List';\r\n\r\nexport default function Type() {\r\n    const [type, setType] = useState('ocassion');\r\n    return (\r\n        <Tabs\r\n            onChange={(v) => { setType(v) }}\r\n            activeKey={type}\r\n            items={[\r\n                {\r\n                    label: \"Occasion\",\r\n                    key: 'ocassion',\r\n                    children: <List type={type} />,\r\n                },\r\n                {\r\n\r\n                    label: \"Recipient\",\r\n                    key: 'recipient',\r\n                    children: <List type={type} />\r\n                },\r\n                {\r\n\r\n                    label: \"Flavour\",\r\n                    key: \"flavour\",\r\n                    children: <List type={type} />\r\n                },\r\n                {\r\n\r\n                    label: \"Relation\",\r\n                    key: \"relation\",\r\n                    children: <List type={type} />\r\n                }\r\n            ]}\r\n        />\r\n    )\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'delivery';\r\n\r\n    // for deliveryType : \r\n    static deliveryTypeDetails(id, data) {\r\n        return axios.get(this.baseURL + '/delivery-type/details/' + id, { params: data });\r\n    }\r\n    static deliveryTypeList(data) {\r\n        return axios.get(this.baseURL + '/delivery-type/list', { params: data });\r\n    }\r\n    static deliveryTypeSave(data, query) {\r\n        return axios.post(this.baseURL + \"/delivery-type/save\", data, { params: query });\r\n    }\r\n    static deliveryTypeDelete(id) {\r\n        return axios.post(this.baseURL + '/delivery-type/delete', { ids: id });\r\n    }\r\n    \r\n    // for delivery :\r\n    static deliveryDetails(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static deliveryList(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static deliverySave(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static deliveryDelete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Image, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport moment from \"moment\";\r\nimport deliveryTypeservice from '../../../services/delivery';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\n\r\n\r\nexport default function DeliveryType() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, });\r\n    const addNewModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 20,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Title',\r\n            dataIndex: 'title',\r\n            width: 80,\r\n        },\r\n        {\r\n            title: 'DeliveryCharge',\r\n            dataIndex: 'deliveryCharge',\r\n            width: 80,\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete?. Be sure to delete the data from server.\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        deliveryTypeservice.deliveryTypeList(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        deliveryTypeservice.deliveryTypeDelete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    \r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Delivery Type</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n            <Col\r\n                    xs={{ span: 24 }}\r\n                    sm={{ span: 16 }}\r\n                    md={{ span: 10 }}\r\n                    lg={{ span: 4 }}\r\n                >\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by title\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data?. Be sure to delete from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { status:true }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        deliveryTypeservice.deliveryTypeDetails(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        deliveryTypeservice.deliveryTypeSave(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } \r\n    }, [open]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Delivery Type'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            \r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Title\">\r\n                                    <Input placeholder='Title' value={data.title} onChange={e => { handleChange({ title: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                           \r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Delivery Charge\">\r\n                                    <Input placeholder='Delivery Charge' value={data.deliveryCharge} onChange={e => { handleChange({ deliveryCharge: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Image, Input, Tag, DatePicker, TimePicker } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport moment from \"moment\";\r\nimport dayjs from 'dayjs';\r\nimport deliveryService from '../../../services/delivery';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\n\r\n\r\nexport default function Delivery() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [deliveryType, setDeliveryType] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, });\r\n    const addNewModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 20,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Delivery Type',\r\n            dataIndex: 'DeliveryTypeDetails',\r\n            width: 80,\r\n            render:(v)=>(v.title)\r\n        },\r\n        {\r\n            title: 'Start Time',\r\n            dataIndex: 'startTime',\r\n            width: 80,\r\n            render: (v, row) => <span>{moment(v).format('DD MMM YYYY')}</span>\r\n        },\r\n        {\r\n            title: 'End Time',\r\n            dataIndex: 'endTime',\r\n            width: 80,\r\n            render: (v, row) => <span>{moment(v).format('DD MMM YYYY')}</span>\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete?. Be sure to delete the data from server.\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        deliveryService.deliveryList(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    function listDeliveryType() {\r\n        deliveryService.deliveryTypeList()\r\n            .then(res => { setDeliveryType(res.data || []); }).catch(err => { AntdMsg('DeliveryType data not loaded', 'error'); });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        deliveryService.deliveryDelete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        list();\r\n        listDeliveryType()\r\n    }, [qData.page, qData.limit]);\r\n\r\n    \r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Delivery</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list,deliveryType }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n            <Col\r\n                    xs={{ span: 24 }}\r\n                    sm={{ span: 16 }}\r\n                    md={{ span: 10 }}\r\n                    lg={{ span: 4 }}\r\n                >\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by title\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete?. Be sure to delete the data from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list,deliveryType } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { status:true }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        deliveryService.deliveryDetails(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        deliveryService.deliverySave(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } \r\n    }, [open]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Delivery'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            \r\n                        <Col span={24}>\r\n                                <Form.Item label=\"Delivery Type\" >\r\n                                    <Select value={data.deliveryTypeId} onChange={v => { handleChange({ deliveryTypeId: v }) }}\r\n                                        options={\r\n                                            deliveryType.map(v => (\r\n                                                {\r\n                                                    value: v._id,\r\n                                                    label: v.title,\r\n                                                }\r\n                                            ))\r\n                                        } >\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Start Time\" required>\r\n                                <TimePicker onChange={(e) => { handleChange({ startTime: e }) }} defaultOpenValue={dayjs('00:00:00', 'HH:mm:ss')} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"End Time\" required>\r\n                                <TimePicker onChange={(e) => { handleChange({ endTime: e }) }} defaultOpenValue={dayjs('00:00:00', 'HH:mm:ss')} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import React from \"react\";\r\nimport { Card, Layout, Menu } from \"antd\";\r\nimport { Routes, Route, Link } from \"react-router-dom\";\r\nimport Error404 from \"../pages/errors/Error404\";\r\nimport commonObj from \"../../commonObj\";\r\n\r\nimport Coupon from \"../pages/Coupon\";\r\n\r\nimport Application from \"../pages/Application\"\r\nimport Category from \"../pages/Category\";\r\nimport Banner from \"../pages/Banner\";\r\nimport Varient from \"../pages/Product/Varient\";\r\n// import Product from \"../pages/Product/Varient\";\r\nimport UserManagement from \"../pages/Management/userManagement\";\r\nimport Product from \"../pages/Product/Product\";\r\nimport Offer from \"../pages/Offer\";\r\nimport AddOn from \"../pages/Product/AddOn\";\r\nimport HomePageItems from \"../pages/HomePageItems\";\r\n\r\nimport Order from \"../pages/Order\";\r\nimport Type from \"../pages/Type/Type\";\r\n\r\nimport DeliveryType from \"../pages/DeliveryManagement/deliveryType\";\r\nimport Delivery from \"../pages/DeliveryManagement/delivery\";\r\n\r\n\r\nexport default function MyLayout() {\r\n\r\n    return (\r\n        <>\r\n            <Layout style={{ minHeight: '100vh', }}>\r\n                <Layout className=\"site-layout\" >\r\n                    <Layout.Header style={{ padding: 0, height: 'auto' }} >\r\n                        <Menu theme=\"dark\" mode=\"horizontal\" items={[\r\n                            {\r\n                                label: <Link to={'/type'}>Type  </Link>,\r\n                                key: \"type\",\r\n                            },\r\n                            {\r\n\r\n                                label: <Link to={'/offer'}>Offers  </Link>,\r\n                                key: \"offer\"\r\n                            },\r\n                            {\r\n                                label: <Link to={'/coupon'}>Coupon</Link>,\r\n                                key: \"coupon\"\r\n                            },\r\n                            {\r\n                                label: <Link to={'/banner'}>Banner</Link>,\r\n                                key: \"banner\"\r\n                            },\r\n                            {\r\n                                label: <Link to={'/order'}>Order</Link>,\r\n                                key: \"order\"\r\n                            },\r\n                            {\r\n                                label: <Link to={'/add-new-product'}>Add New Product</Link>,\r\n                                key: \"add-new-product\"\r\n                            },\r\n                            {\r\n                                label: <Link to={'/addOn'}>AddOn</Link>,\r\n                                key: \"addOn\"\r\n                            },\r\n\r\n                            {\r\n                                label: <Link to={'/category'}>Category</Link>,\r\n                                key: \"category\"\r\n                            },\r\n\r\n                            {\r\n                                label: <Link to={'/application'}>Application</Link>,\r\n                                key: \"application\"\r\n                            },\r\n\r\n                            {\r\n                                label: 'Delivery Management',\r\n                                key: 'delivery-management',\r\n                                children: [\r\n                                    {\r\n                                        label: <Link to={'/delivery'}>Delivery</Link>,\r\n                                        key: \"delivery\"\r\n                                    },\r\n                                    {\r\n                                        label: <Link to={'/delivery-type'}>Delivery Type</Link>,\r\n                                        key: \"delivery-type\"\r\n                                    },\r\n                                ]\r\n                            },\r\n                            {\r\n                                label: <Link to={'/homepageitems'}>Home Page Items</Link>,\r\n                                key: \"homePageItems\"\r\n                            },\r\n                            {\r\n                                label: <Link to={'/management'}>User Management</Link>,\r\n                                key: \"management\"\r\n                            },\r\n                            {\r\n                                label: commonObj?.name ? commonObj.name : 'You',\r\n                                key: 'profile',\r\n                                children: [\r\n                                    {\r\n                                        key: 'Profile',\r\n                                        label: 'Profile',\r\n                                    },\r\n                                    {\r\n                                        key: 'Logout',\r\n                                        danger: true,\r\n                                        label: 'Logout',\r\n                                        onClick: () => { window.localStorage.clear(); window.location.reload(); }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]}>\r\n                        </Menu>\r\n                    </Layout.Header>\r\n\r\n                    <Layout.Content>\r\n                        <Card style={{ borderRadius: \"none\" }}>\r\n                            <Routes>\r\n                                <Route path=\"type\" element={<Type />} >    </Route>\r\n                                <Route path=\"offer\" element={<Offer />}>  </Route>\r\n                                <Route path=\"coupon\" element={<Coupon />}> </Route>\r\n                                <Route path=\"banner\" element={<Banner />} />\r\n                                <Route path=\"application\" element={<Application />} />\r\n                                <Route path=\"category\" element={<Category />} />\r\n                                <Route path=\"management\" element={<UserManagement />} />\r\n                                <Route path=\"homepageitems\" element={<HomePageItems />} />\r\n                                <Route path=\"add-new-product\" element={<Product />} />\r\n                                <Route path=\"addOn\" element={<AddOn />} />\r\n                                <Route path=\"order\" element={<Order />} />\r\n                                <Route path=\"delivery\" element={<Delivery />} />\r\n                                <Route path=\"delivery-type\" element={<DeliveryType />} />\r\n\r\n                                <Route path={'*'} element={<Error404 />} />\r\n                            </Routes>\r\n                        </Card>\r\n                    </Layout.Content>\r\n                </Layout>\r\n            </Layout>\r\n        </>\r\n    );\r\n\r\n}"],"names":["Error404","status","title","subTitle","extra","to","type","service","data","axios","params","query","id","ids","baseURL","this","MyPagination","props","qData","setQData","total","showTotal","start","page","limit","end","pageSize","current","onChange","pp","showSizeChanger","AntdMsg","$msg","$type","message","Coupon","useState","setData","loading","setLoading","selected","setSelected","user","setUser","addNewModalRef","useRef","columns","width","render","v","row","i","dataIndex","moment","format","isActive","color","onConfirm","deleteData","_id","okText","cancelText","size","danger","icon","DeleteOutlined","EditOutlined","onClick","openForm","filter","item","hidden","list","then","res","map","key","reverse","catch","err","finally","tableColumns","ellipsis","console","log","fixed","length","tableProps","bordered","Search","showHeader","footer","rowSelection","selectedRowKeys","tableLayout","undefined","useEffect","UserService","level","style","marginTop","pagination","position","dataSource","scroll","y","x","AddForm","ref","onSubmitCapture","className","gutter","xs","xl","marginBottom","placeholder","value","e","target","allowClear","expiryDate","span","htmlType","float","forwardRef","open","setOpen","aspect","ajxRequesting","setAjxRequesting","setFileList","handleChange","Object","entries","forEach","ent","varDt","k","keys","split","parseInt","useImperativeHandle","dt","fileType","save","details","avatar","code","util","toUpperCase","top","onOk","okButtonProps","disabled","onCancel","destroyOnClose","maskClosable","spinning","indicator","LoadingOutlined","fontSize","spin","layout","label","required","discountType","discountValue","maxDiscountValue","minimunOrderPrice","typeOfUse","mode","userIds","options","padding","margin","name","phone","dayjs","disabledDate","isBefore","Date","subtract","forFirst","defaultValue","TinyMce","height","menubar","plugins","toolbar","content_style","initialValue","editorRef","onInit","evt","editor","init","file_browser_callback_types","file_picker_callback","cb","meta","input","document","createElement","setAttribute","onchange","file","files","reader","FileReader","readAsDataURL","onload","result","click","deprecation_warnings","onSelectionChange","getContent","Application","currentTab","setCurrentTab","changeForm","getDetails","activeKey","items","children","borderTop","Aboutus","TandC","FAQ","Contactus","PrivacyPolicy","display","flexDirection","paddingTop","paddingRight","editableStr","setEditableStr","a","setA","b","setB","editable","pre","address","Category","parentId","addSubNewModalRef","NewForm","sm","md","lg","isTop","slug","url","config","fileList","count","cropImage","listType","uploadImage","onSuccess","onError","onProgress","fmData","FormData","onUploadProgress","event","percent","loaded","append","fileService","uid","handleOnChange","fl","handleRemove","shape","quality","rotate","accept","customRequest","onRemove","Banner","src","image","Varient","productId","addNewLabelRef","AddLabel","cateId","price","kg","Address","userId","city","pin","state","street1","street2","Cart","UserManagement","ModelModalRef","ModelModalCartRef","ModelModal","ModelModal1","email","Product","category","setCategory","expandable","categoryService","thumbFile","setThumbFile","setFile","isPremium","isBestSelling","forBirthday","forAnniversary","isBestSellingCombos","variants","imgs","thumbImg","rows","description","metaTitle","categoryIds","metaTag","metaDescription","heighlight","Variant","variantDetails","parentKay","orientation","weight","actualPrice","pop","Offer","product","setProduct","endDate","ProductService","discountPercent","productIds","startDate","AddOn","allProduct","setAllProduct","allCategories","setAllCategories","allOffers","setAllOffers","allBanners","setAllBanners","vv","imgUrl","serviceProduct","isAll","offerService","bannerService","optionLabelProp","bannerIds","offerIds","displayOrder","displayType","OrderDetails","orderId","_","catId","withDiscountPrice","ln","setLn","setChangeForm","quantity","Order","categoryId","attributeModalRef","JSON","parse","finalPrice","AttributeModal","List","border1","showSearch","Type","setType","DeliveryType","deliveryTypeservice","deliveryCharge","Delivery","deliveryType","setDeliveryType","deliveryService","deliveryTypeId","startTime","defaultOpenValue","endTime","MyLayout","minHeight","theme","commonObj","window","localStorage","clear","location","reload","borderRadius","path","element"],"sourceRoot":""}